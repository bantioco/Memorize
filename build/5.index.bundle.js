webpackJsonp([5],{

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar app = function app() {\n\n    var $d = $(document),\n        login = void 0,\n        email = void 0,\n        remember = \"0\",\n        datetime = moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        myIP = void 0;\n\n    console.log(db);\n\n    if (window.openDatabase) {\n        var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n    } else {\n        new Promise(function (resolve) {\n            __webpack_require__.e/* require.ensure */(0/* duplicate */).then((function (require) {\n                resolve(__webpack_require__(0));\n            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n        }).then(function (first_login) {\n            first_login.default();\n        });\n    }\n\n    var order = \"ASC\";\n\n    $('.icon-login').hide();\n    $('.nav-btn').fadeIn(500);\n    $('.nav-disconnect').fadeIn(500);\n\n    /***********************************************************************\n        FUNCTION\n    ************************************************************************/\n\n    var get_local_network_ip = function get_local_network_ip() {\n\n        window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\n        var pc = new RTCPeerConnection({ iceServers: [] }),\n            noop = function noop() {};\n\n        pc.createDataChannel(\"\");\n\n        pc.createOffer(pc.setLocalDescription.bind(pc), noop);\n\n        pc.onicecandidate = function (ice) {\n\n            if (!ice || !ice.candidate || !ice.candidate.candidate) return;\n\n            myIP = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n\n            pc.onicecandidate = noop;\n\n            return myIP;\n        };\n    };\n\n    get_local_network_ip();\n\n    var nl2br = function nl2br(str, is_xhtml) {\n        var breakTag = is_xhtml || typeof is_xhtml === 'undefined' ? '<br />' : '<br>';\n        return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n    };\n\n    var imageIsLoaded = function imageIsLoaded(e) {\n        $('#add_img_loaded').html('<img src=\"' + e.target.result + '\"/>');\n    };\n\n    var resize_img = function resize_img(file) {};\n\n    var copyFile = function copyFile(fs, path, filesrc, dirupload) {\n\n        var f = path.basename(filesrc);\n        var source = fs.createReadStream(filesrc);\n        var dest = fs.createWriteStream(path.resolve(dirupload, f));\n\n        source.pipe(dest);\n\n        source.on('end', function () {});\n        source.on('error', function (err) {\n            console.log(err);\n        });\n    };\n\n    var upload_img = function upload_img(img, $this) {\n\n        var imgsend = \"default.png\";\n\n        if (img.length >= 1) {\n\n            if ($this.files && $this.files[0]) {\n\n                var $thisfile = $this.files[0];\n                var originalfile = $thisfile.path;\n\n                var filename = $thisfile.name;\n                var filetype = $thisfile.type;\n                var filesize = $thisfile.size;\n\n                if (filetype == \"image/png\" || filetype == \"image/jpeg\") {\n\n                    copyFile(fs, path, originalfile, './upload/');\n\n                    imgsend = filename;\n                }\n            }\n        }\n\n        return imgsend;\n    };\n\n    var item_sortable = function item_sortable() {\n\n        $(\"#view_data\").sortable({\n            items: \".view-item\",\n            handle: \".grip\",\n            connectWith: \".category-view-item\",\n            opacity: 0.5,\n            axis: \"y\",\n            revert: true,\n            stop: function stop(event, ui) {\n\n                if (window.openDatabase) {\n\n                    var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n\n                    $('.view-item').each(function (i, v) {\n\n                        var position = i + 1;\n\n                        $(v).attr('data-position', i);\n                        var rowid = $(v).attr('data-id');\n\n                        $(v).find('.item-position').text(position);\n\n                        db.transaction(function (tx) {\n                            tx.executeSql('UPDATE datas SET position=? WHERE rowid=?', [i, rowid]);\n                        });\n                    });\n                }\n            }\n        });\n    };\n\n    var item_droppable = function item_droppable() {\n\n        $(\".category-view-item\").droppable({\n            accept: \".view-item\",\n            over: function over(event, ui) {\n                dropped = true;\n                $(event.target).addClass('dropped');\n            },\n            drop: function drop(event, ui) {\n\n                var targetID = $(event.target).attr('data-id');\n                var clone = $(ui.draggable[0]).clone();\n\n                $(ui.draggable[0]).addClass(\"ToRemove\");\n\n                var itemID = $(ui.draggable[0]).attr('data-id');\n\n                //$('.category-view-item[data-id=\"'+targetID+'\"]').prepend( clone );\n                $(clone).insertBefore('.ui-sortable-placeholder');\n\n                $(clone).removeAttr('style');\n\n                $('.ToRemove').remove();\n\n                $('.category-view-item').removeClass('dropped');\n\n                db.transaction(function (tx) {\n\n                    tx.executeSql('UPDATE datas SET category=? WHERE rowid=?', [targetID, itemID]);\n                });\n            },\n            out: function out(event, ui) {\n\n                var itemID = $(ui.draggable[0]).attr('data-id');\n\n                db.transaction(function (tx) {\n                    tx.executeSql('UPDATE datas SET category=? WHERE rowid=?', [\"0\", itemID]);\n                });\n            }\n        });\n    };\n\n    var search_script = function search_script() {\n        /**************************************************\n            FILTER SEARCH KEYWORDS\n        **************************************************/\n        jQuery.expr[':'].icontains = function (a, i, m) {\n            var rExps = [{ re: /[\\xC0-\\xC6]/g, ch: \"A\" }, { re: /[\\xE0-\\xE6]/g, ch: \"a\" }, { re: /[\\xC8-\\xCB]/g, ch: \"E\" }, { re: /[\\xE8-\\xEB]/g, ch: \"e\" }, { re: /[\\xCC-\\xCF]/g, ch: \"I\" }, { re: /[\\xEC-\\xEF]/g, ch: \"i\" }, { re: /[\\xD2-\\xD6]/g, ch: \"O\" }, { re: /[\\xF2-\\xF6]/g, ch: \"o\" }, { re: /[\\xD9-\\xDC]/g, ch: \"U\" }, { re: /[\\xF9-\\xFC]/g, ch: \"u\" }, { re: /[\\xC7-\\xE7]/g, ch: \"c\" }, { re: /[\\xD1]/g, ch: \"N\" }, { re: /[\\xF1]/g, ch: \"n\" }];\n\n            var element = $(a).text();\n            var search = m[3];\n\n            $.each(rExps, function () {\n                element = element.replace(this.re, this.ch);\n                search = search.replace(this.re, this.ch);\n            });\n\n            return element.toUpperCase().indexOf(search.toUpperCase()) >= 0;\n        };\n        /* ..SEARCH.. */\n        $d.off('keyup', '#item_filter_keywords').on('keyup', '#item_filter_keywords', function () {\n\n            var searchvalue = $(this).val();\n\n            if (searchvalue.length >= 2) {\n                $('.keyword_data').hide();\n                //$('.modal-title-content').hide()\n                var keyword = $('.keyword_data:icontains(\"' + searchvalue + '\")').show();\n            } else {\n                $('.keyword_data').show();\n                //$('.modal-title-content').show()\n            }\n        });\n        /**************************************************\n            END -- FILTER SEARCH KEYWORDS\n        **************************************************/\n    };\n\n    var load_category = function load_category() {\n        var order = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ASC\";\n\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT rowid, * FROM category ORDER BY position ' + order, [], function (tx, results) {\n\n                if (results.rows) {\n\n                    var data = results.rows;\n\n                    $(data).each(function (i, v) {\n\n                        var category = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-category\">' + '<div class=\"title-block\">' + '<div data-id=\"' + v.rowid + '\" class=\"category-hide\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"img-category\"><img src=\"/upload/' + v.img + '\"></div>' + '<div class=\"title-category\">' + v.title + '</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"category-view-item\"></div>';\n                        '</div>';\n\n                        $('#view_data').prepend(category);\n\n                        $('.category-hide[data-id=\"' + v.rowid + '\"]').children('i').css('transform', 'rotate(45deg)');\n                    });\n                }\n            });\n        });\n    };\n\n    var load_data = function load_data() {\n        var order = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ASC\";\n\n\n        load_category();\n\n        setTimeout(function () {\n\n            if (window.openDatabase) {\n\n                var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n\n                db.transaction(function (tx) {\n\n                    tx.executeSql('SELECT rowid, * FROM datas ORDER BY position ' + order, [], function (tx, results) {\n\n                        if (results.rows) {\n\n                            var data = results.rows;\n\n                            $(data).each(function (i, v) {\n\n                                var description = v.description;\n\n                                if (v.encrypted === \"1\") {\n\n                                    tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                                        if (results.rows[0]) {\n\n                                            var key = results.rows[0].key;\n\n                                            description = CryptoJS.AES.decrypt(v.description, key);\n                                            description = description.toString(CryptoJS.enc.Utf8);\n\n                                            var item = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-item keyword_data\">' + '<div class=\"nav-item\">' + '<div data-id=\"' + v.rowid + '\" class=\"hide-item\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"title-item\">' + v.title + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip-notice\">Drag me..</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip\"><i class=\"fa fa-paw\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-trash view_item_delete\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-pencil view_item_edit\" aria-hidden=\"true\"></i></div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"item-delete-confirmation\">' + '<div class=\"item_confirm_delete\">DELETE</div><div class=\"item_cancel_delete\">CANCEL</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"description-item\">' + '<div class=\"img\"><img src=\"/upload/' + v.img + '\" alt=\"\" /></div>' + '<div class=\"text\">' + description + '</div>' + '</div>' + '<div class=\"date-item\">' + '<div class=\"item-encrypt\">Encrypted..</div>' + '<div class=\"item-position\">' + position + '</div>' + '<div class=\"date-up\">Updated : ' + v.dateupdate + '</div>' + '</div>' + '</div>';\n\n                                            if (v.category != \"0\") {\n\n                                                if ($('.category-view-item[data-id=\"' + v.category + '\"]').is(':visible')) {\n\n                                                    $('.category-view-item[data-id=\"' + v.category + '\"]').append(item);\n                                                } else {\n\n                                                    $('#view_data').append(item);\n                                                }\n                                            } else {\n                                                $('#view_data').append(item);\n                                            }\n                                        }\n                                    });\n                                } else {\n                                    var item = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-item keyword_data\">' + '<div class=\"nav-item\">' + '<div data-id=\"' + v.rowid + '\" class=\"hide-item\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"title-item\">' + v.title + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip-notice\">Drag me..</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip\"><i class=\"fa fa-paw\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-trash view_item_delete\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-pencil view_item_edit\" aria-hidden=\"true\"></i></div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"item-delete-confirmation\">' + '<div class=\"item_confirm_delete\">DELETE</div><div class=\"item_cancel_delete\">CANCEL</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"description-item\">' + '<div class=\"img\"><img src=\"/upload/' + v.img + '\" alt=\"\" /></div>' + '<div class=\"text\">' + description + '</div>' + '</div>' + '<div class=\"date-item\">' + '<div class=\"item-encrypt\">Not encrypted..</div>' + '<div class=\"item-position\">' + position + '</div>' + '<div class=\"date-up\">Updated : ' + v.dateupdate + '</div>' + '</div>' + '</div>';\n\n                                    if (v.category != \"0\") {\n\n                                        if ($('.category-view-item[data-id=\"' + v.category + '\"]').is(':visible')) {\n\n                                            $('.category-view-item[data-id=\"' + v.category + '\"]').append(item);\n                                        } else {\n                                            $('#view_data').append(item);\n                                        }\n                                    } else {\n                                        $('#view_data').append(item);\n                                    }\n                                }\n\n                                var position = i + 1;\n\n                                tx.executeSql('UPDATE datas SET position=? WHERE rowid=?', [i, v.rowid]);\n                            });\n\n                            item_sortable();\n\n                            search_script();\n\n                            setTimeout(function () {\n                                item_droppable();\n                            }, 2000);\n                        }\n                    });\n                });\n            } else {\n                new Promise(function (resolve) {\n                    __webpack_require__.e/* require.ensure */(0/* duplicate */).then((function (require) {\n                        resolve(__webpack_require__(0));\n                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n                }).then(function (first_login) {\n                    first_login.default();\n                });\n            }\n        }, 500);\n    };\n\n    var backup_database = function backup_database(table) {\n\n        var data = new Object();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM \" + table, [], function (tx, results) {\n\n                if (results) {\n                    $(results.rows).each(function (i, v) {\n                        data[i] = v;\n                    });\n                    return data;\n                } else {\n                    return null;\n                }\n            });\n        }, null);\n    };\n\n    var backup = function backup(table) {\n\n        var def = new $.Deferred();\n\n        db.readTransaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM \" + table, [], function (tx, results) {\n\n                var data = results.rows;\n\n                def.resolve(data);\n            });\n        }, null);\n\n        return def;\n    };\n\n    var get_synchronise_table = function get_synchronise_table() {\n\n        var thekey = new $.Deferred();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM synchronize\", [], function (tx, results) {\n\n                if (results) {\n                    thekey.resolve(results.rows[0].key);\n                } else {\n                    thekey.resolve('null');\n                }\n            });\n        }, function (err) {\n            console.log(err);\n            thekey.resolve('null');\n        });\n\n        return thekey;\n    };\n\n    var generate_key = function generate_key() {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        for (var i = 0; i < 50; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }return text;\n    };\n\n    var create_synchronise_table = function create_synchronise_table() {\n\n        db.transaction(function (tx) {\n\n            var key = generate_key();\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize (key, active, datestart DATETIME)');\n\n            tx.executeSql('INSERT INTO synchronize (key, active, datestart) VALUES (\"' + key + '\", \"1\", \"' + datetime + '\")');\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize_autorized (key, ip, machine, dateadd DATETIME)');\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize_log (ip, key, datelog DATETIME)');\n        }, function (err) {\n\n            console.log(err);\n        });\n\n        return;\n    };\n\n    var delete_synchronise_table = function delete_synchronise_table() {\n\n        db.transaction(function (tx) {\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize\");\n            });\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize_autorized\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize_autorized\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize_autorized\");\n            });\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize_log\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize_log\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize_log\");\n            });\n        });\n    };\n\n    var get_server_sync_on_start = function get_server_sync_on_start() {\n\n        var key = null;\n\n        $.when(get_synchronise_table()).then(function (thiskey) {\n\n            if (thiskey != 'null') {\n                key = thiskey;\n                setTimeout(function () {\n                    http_server_start(myIP, key);\n                }, 1500);\n            }\n        });\n    };\n    get_server_sync_on_start();\n\n    var sync_data_check = function sync_data_check(str) {\n\n        var def = new $.Deferred();\n\n        db.readTransaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM datas WHERE title=?\", [str], function (tx, results) {\n\n                if (results) {\n                    var item = results.rows;\n                    def.resolve(item);\n                } else {\n                    def = \"no_data\";\n                }\n            });\n        }, function (err) {\n            console.log(err);\n        });\n\n        return def;\n    };\n\n    var sync_data_insert = function sync_data_insert(data) {\n\n        var title = data.title;\n        var description = data.description;\n        var img = \"default.png\";\n        var position = \"0\";\n        var dateadd = data.dateadd;\n        var dateupdate = data.dateupdate;\n        var encrypted = data.encrypted;\n\n        db.transaction(function (tx) {\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS datas (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME, encrypted VARCHAR NOT NULL DEFAULT '0')\");\n            tx.executeSql('INSERT INTO datas (title, description, img, position, dateadd, dateupdate, encrypted) VALUES (\"' + title + '\", \"' + description + '\", \"' + img + '\", \"' + position + '\", \"' + dateadd + '\", \"' + dateupdate + '\", \"' + encrypted + '\")');\n        });\n\n        /*\n        db.transaction(function(tx) {\n            tx.executeSql('INSERT INTO datas (title, description, img, position, dateadd, dateupdate, encrypted) VALUES (\"'+title+'\", \"'+description+'\", \"'+img+'\", \"'+position+'\", \"'+dateadd+'\", \"'+dateupdate+'\", \"'+encrypted+'\")');\n        })\n        */\n    };\n\n    var get_encryption = function get_encryption() {\n\n        var data = new $.Deferred();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS encryption (key, state VARCHAR NOT NULL DEFAULT '0')\");\n\n            tx.executeSql(\"SELECT rowid, * FROM encryption\", [], function (tx, results) {\n\n                if (results.rows[0]) {\n                    data.resolve(results.rows[0]);\n                } else {\n                    data.resolve('null');\n                }\n            });\n        }, function (err) {\n            console.log(err);\n            data.resolve('null');\n        });\n\n        return data;\n    };\n\n    var add_key_encryption = function add_key_encryption(str) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM encryption\", [], function (tx, results) {\n\n                if (results.rows[0]) {\n                    tx.executeSql('UPDATE encryption SET key=? where rowid=?', [str, 1]);\n                } else {\n\n                    tx.executeSql('INSERT INTO encryption (key) VALUES (\"' + str + '\")');\n                }\n            });\n        });\n    };\n\n    var encryption_state_value = function encryption_state_value(value) {\n\n        db.transaction(function (tx) {\n\n            if (value === \"1\") {\n                tx.executeSql('UPDATE encryption SET state=? where rowid=?', [\"1\", 1]);\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n                        var key = results.rows[0].key;\n\n                        crypt_data(key);\n                    }\n                });\n            }\n\n            if (value === \"0\") {\n                tx.executeSql('UPDATE encryption SET state=? where rowid=?', [\"0\", 1]);\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n                        var key = results.rows[0].key;\n                        decrypt_data(key);\n                    }\n                });\n            }\n        });\n    };\n\n    var crypt_data = function crypt_data(key) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT rowid, * FROM datas\", [], function (tx, results) {\n\n                if (results) {\n\n                    $.each(results.rows, function (k, v) {\n\n                        var description_encrypt = CryptoJS.AES.encrypt(v.description, key);\n                        description_encrypt = description_encrypt.toString();\n\n                        var id = v.rowid;\n\n                        if (v.encrypted === \"0\") {\n                            tx.executeSql('UPDATE datas SET description=? where rowid=?', [description_encrypt, id]);\n                            tx.executeSql('UPDATE datas SET encrypted=? where rowid=?', [\"1\", id]);\n                        }\n                    });\n                }\n            });\n        });\n    };\n\n    var decrypt_data = function decrypt_data(key) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT rowid, * FROM datas\", [], function (tx, results) {\n\n                if (results) {\n\n                    $.each(results.rows, function (k, v) {\n\n                        var description_decrypt = CryptoJS.AES.decrypt(v.description, key);\n                        description_decrypt = description_decrypt.toString(CryptoJS.enc.Utf8);\n\n                        var id = v.rowid;\n\n                        if (v.encrypted === \"1\") {\n                            tx.executeSql('UPDATE datas SET description=? where rowid=?', [description_decrypt, id]);\n                            tx.executeSql('UPDATE datas SET encrypted=? where rowid=?', [\"0\", id]);\n                        }\n                    });\n                }\n            });\n        });\n    };\n\n    var backup_download = function backup_download() {\n\n        //GET BACKUP DATA BASE\n        var file = path.basename('/data') + \"/datas.json\";\n        fs.exists(file, function (exists) {\n\n            if (exists) {\n\n                $('#result_export_database_file').show();\n\n                fs.readFile(file, 'utf8', function (err, data) {\n\n                    if (!err) {\n                        var download = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n                        $('<a href=\"data:' + download + '\" download=\"datas.json\">Download JSON file</a>').appendTo('#result_export_database_file');\n                    }\n                });\n            }\n        });\n    };\n\n    /***********************************************\n        **FOR DEV**\n    ***********************************************/\n    var add_column = function add_column() {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT encrypted FROM datas\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: encrypted)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE datas ADD encrypted VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT category FROM datas\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: category)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE datas ADD category VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT state FROM encryption\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: state)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE encryption ADD state VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n    };\n    add_column();\n    /***********************************************\n        END **FOR DEV**\n    ***********************************************/\n\n    /***********************************************************************\n        START\n    ************************************************************************/\n    $('#app_nav').show();\n\n    db.transaction(function (tx) {\n\n        tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n            if (results.rows[0]) {\n                var user = results.rows[0];\n\n                login = user.login;\n                email = user.email;\n                remember = user.remember;\n            }\n        });\n    });\n\n    // ** ON START LOAD VIEW.HTML **\n    $.post('/templates/view.html', function (data) {\n\n        $('#template_load').html(data);\n\n        load_data(order);\n    });\n\n    /***********************************************************************\n        NAVIGATION\n    ************************************************************************/\n\n    $d.off('click', '#return_home').on('click', '#return_home', function () {\n        $.post('/templates/view.html', function (data) {\n\n            $('#template_load').html(data);\n\n            load_data(order);\n        });\n    });\n\n    $d.off('click', '#show_params').on('click', '#show_params', function () {\n\n        $.post('/templates/params.html', function (data) {\n\n            $('#template_load').html(data);\n\n            var key = null;\n\n            //GET SYNCHRONIZE & ENCRYPTION..\n            $.when(get_synchronise_table(), get_encryption()).then(function (data, encryption) {\n\n                // SYNCHRONISE DATA\n                if (data != 'null') {\n                    key = data;\n\n                    $('#open_browser_localhost').fadeIn(300);\n\n                    $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n\n                    $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access. Remove this email after sync app...&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n\n                    $('input[name=\"http_server\"]').prop('checked', true);\n                }\n\n                // ENCRYPTION DATA\n                if (encryption != 'null' || encryption != null) {\n\n                    $('#params_encryption').val(encryption.key);\n                    $('#params_encrypt_data_state').show();\n\n                    if (encryption.state === \"1\") {\n                        $('input#encrypt_data').prop('checked', true);\n                        $('#params_encryption').prop('readonly', true);\n                        $('#params_encryption').prop('disabled', true);\n                    } else {\n                        $('input#encrypt_data').prop('checked', false);\n                        $('#params_encryption').prop('readonly', false);\n                        $('#params_encryption').prop('disabled', false);\n                    }\n                }\n            });\n\n            // GET REMEMBER\n            if (remember === \"1\") {\n                $('input[name=\"params_remember\"]').prop('checked', true);\n            } else {\n                $('input[name=\"params_remember\"]').prop('checked', false);\n            }\n\n            backup_download();\n\n            $('#get_api_for_synchronize_result_html').remove();\n        });\n    });\n\n    $d.off('click', '#add_data').on('click', '#add_data', function () {\n        $.post('/templates/add.html', function (data) {\n            $('#template_load').html(data);\n        });\n    });\n\n    $d.off('click', '#add_category').on('click', '#add_category', function () {\n        $.post('/templates/add_category.html', function (data) {\n            $('#template_load').html(data);\n        });\n    });\n\n    $d.off('click', '#app_return').on('click', '#app_return', function () {\n        $.post('/templates/view.html', function (data) {\n            $('#template_load').html(data);\n            add_navigation();\n        });\n    });\n\n    $d.off('click', '#app_disconnect').on('click', '#app_disconnect', function () {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n                tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"0\", 1], function (tx) {\n                    new Promise(function (resolve) {\n                        new Promise(function(resolve) { resolve(); }).then((function (require) {\n                            resolve(__webpack_require__(8));\n                        }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n                    }).then(function (login) {\n                        login.default();\n                    });\n                });\n            });\n        });\n    });\n\n    /***********************************************************************\n        PARAMS\n    ************************************************************************/\n\n    $d.off('change', 'input[name=\"http_server\"]').on('change', 'input[name=\"http_server\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        var key = null;\n\n        if (val == true) {\n\n            $.when(get_synchronise_table()).then(function (thiskey) {\n\n                if (thiskey != 'null') {\n                    key = thiskey;\n                    $('#open_browser_localhost').fadeIn(300);\n                    $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n                    $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access app&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n                } else {\n\n                    create_synchronise_table();\n\n                    $.when(get_synchronise_table()).then(function (newkey) {\n                        key = newkey;\n                        $('#open_browser_localhost').fadeIn(300);\n                        $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n                        $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access app&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n                    });\n                }\n            });\n\n            setTimeout(function () {\n                win_reload();\n            }, 1500);\n        } else {\n\n            $('#open_browser_localhost').fadeOut(300);\n            $('#sync_key_show').remove();\n\n            delete_synchronise_table();\n\n            setTimeout(function () {\n                win_reload();\n            }, 1000);\n        }\n    });\n\n    $d.off('change', 'input[name=\"params_remember\"]').on('change', 'input[name=\"params_remember\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n                if (val == true) {\n                    tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"1\", 1]);\n                    remember = \"1\";\n                } else {\n                    tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"0\", 1]);\n\n                    remember = \"0\";\n                }\n            });\n        });\n    });\n\n    $d.off('change', 'input[name=\"export_database\"]').on('change', 'input[name=\"export_database\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        if (val == true) {\n\n            //let datasdata   = backup_database(\"datas\");\n\n            $.when(backup(\"datas\"), backup(\"user\")).then(function (datas, user) {\n\n                if (datas.length >= 1) {\n\n                    $('input[name=\"export_database\"]').hide();\n                    $('#result_export_database').fadeIn(300).append('<small>Data succesfully exported</small>');\n\n                    var datadatas = { datas: datas };\n                    var serializedDataData = JSON.stringify(datadatas);\n\n                    fs.writeFile(\"data/datas.json\", serializedDataData, function (err) {\n\n                        if (err) {\n                            console.error(err);\n                            return;\n                        };\n\n                        $('input[name=\"export_database\"]').prop('checked', false);\n\n                        if ($('#result_export_database_file').is(':hidden')) {\n                            backup_download();\n                        }\n                    });\n                }\n\n                if (user.length >= 1) {\n                    $('input[name=\"export_database\"]').hide();\n                    $('#result_export_database').fadeIn(300).append('<small>User succesfully exported</small>');\n\n                    var datauser = { user: user };\n                    var serializedDataUser = JSON.stringify(datauser);\n                }\n\n                setTimeout(function () {\n                    $('#result_export_database').fadeOut(300).html('');\n                    $('input[name=\"export_database\"]').show(300);\n                }, 3000);\n            });\n        }\n    });\n\n    $d.off('click', '#get_api_for_synchronize').on('click', '#get_api_for_synchronize', function (e) {\n\n        e.preventDefault();\n\n        var apilink = $('#api_for_synchronize').val();\n\n        $('#get_api_for_synchronize_result_html').remove();\n\n        if (apilink.length >= 25) {\n\n            $.getJSON(apilink, function (data) {\n\n                if (data) {\n\n                    var items = data.datas;\n\n                    $.each(items, function (k, v) {\n\n                        var title = v.title;\n\n                        $.when(sync_data_check(title)).then(function (items) {\n\n                            if (items.length <= 0) {\n                                sync_data_insert(v);\n                                $('#get_api_for_synchronize_result').html('<div id=\"get_api_for_synchronize_result_html\">' + title + ' insered..</div>');\n                            } else {\n                                $('#get_api_for_synchronize_result').html('<div id=\"get_api_for_synchronize_result_html\">All items are allready on database..</div>');\n                            }\n                        });\n                    });\n                }\n            });\n        } else if (apilink.length === 0) {\n            $('#api_for_synchronize').val(\"Enter link in field..\");\n\n            setTimeout(function () {\n                $('#api_for_synchronize').val(apilink);\n            }, 2000);\n        } else {\n            $('#api_for_synchronize').val(\"Link is not valid...\");\n\n            setTimeout(function () {\n                $('#api_for_synchronize').val(apilink);\n            }, 2000);\n        }\n    });\n\n    $d.off('click', '#send_params_encryption').on('click', '#send_params_encryption', function (e) {\n        e.preventDefault();\n\n        var value = $('#params_encryption').val();\n\n        if (value.length >= 8) {\n            add_key_encryption(value);\n\n            $('#params_encryption_result').html('<div id=\"params_encryption_result_html\">Added !</div>');\n            setTimeout(function () {\n                $('#params_encryption_result_html').remove();\n            }, 1500);\n        } else {\n            $('#params_encryption').val('8 print minimum required..');\n            setTimeout(function () {\n                $('#params_encryption').val(value);\n            }, 2000);\n        }\n    });\n\n    $d.off('change', 'input[name=\"encrypt_data\"]').on('change', 'input[name=\"encrypt_data\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        if (val == true) {\n            encryption_state_value(\"1\");\n            $('#params_encryption').prop('readonly', true);\n            $('#params_encryption').prop('disabled', true);\n\n            $('#encrypt_data_result').html('<div id=\"encrypt_data_result_html\">Crypted !</div>');\n            setTimeout(function () {\n                $('#encrypt_data_result_html').remove();\n            }, 1500);\n        } else {\n            encryption_state_value(\"0\");\n            $('#params_encryption').prop('readonly', false);\n            $('#params_encryption').prop('disabled', false);\n\n            $('#encrypt_data_result').html('<div id=\"encrypt_data_result_html\">Decrypted !</div>');\n            setTimeout(function () {\n                $('#encrypt_data_result_html').remove();\n            }, 1500);\n        }\n    });\n\n    $d.off('change', 'input[name=\"import_database\"]').on('change', 'input[name=\"import_database\"]', function () {\n\n        var file = $(this).val();\n\n        fs.readFile(file, 'utf8', function (err, data) {\n            if (err) {\n                console.log(err);\n            } else {\n\n                var json = $.parseJSON(data);\n                var jsondata = json.datas;\n\n                $.each(jsondata, function (k, v) {\n\n                    var title = v.title;\n\n                    $.when(sync_data_check(title)).then(function (items) {\n\n                        if (items.length <= 0) {\n\n                            sync_data_insert(v);\n                            $('#result_import_database').text(v.title + ' insered in database..').show();\n                        } else {\n                            $('#result_import_database').text('All items are allready on database..').show();\n                        }\n                    });\n                });\n            }\n        });\n    });\n\n    /***********************************************************************\n        ADD DATA\n    ************************************************************************/\n    $d.off('change', 'input[name=\"add_img\"]').on('change', 'input[name=\"add_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('submit', '#form_add_data').on('submit', '#form_add_data', function (e) {\n        e.preventDefault();\n\n        var title = $('input[name=\"add_title\"]').val();\n        var description = nl2br($('textarea[name=\"add_description\"]').val());\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var img = $('input[name=\"add_img\"]').val();\n\n            var $this = $('input[name=\"add_img\"]')[0];\n\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql(\"CREATE TABLE IF NOT EXISTS datas (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME, encrypted VARCHAR NOT NULL DEFAULT '0', category VARCHAR NOT NULL DEFAULT '0')\");\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n\n                        var key = results.rows[0].key;\n\n                        var description_encrypt = CryptoJS.AES.encrypt(description, key);\n                        description_encrypt = description_encrypt.toString();\n\n                        tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate, encrypted, category) VALUES (\"' + title + '\", \"' + description_encrypt + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\", \"1\", \"0\")');\n                    } else {\n                        tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate, encrypted, category) VALUES (\"' + title + '\", \"' + description + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\", \"0\", \"0\")');\n                    }\n                });\n\n                //tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate) VALUES (\"'+title+'\", \"'+description+'\", \"'+imgsend+'\", \"'+datetime+'\", \"'+datetime+'\")');\n\n                $('input[name=\"add_title\"]').val('');\n                $('textarea[name=\"add_description\"]').val('');\n                $('file[name=\"add_img\"]').val('');\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        ADD CATEGORY\n    ************************************************************************/\n    $d.off('change', 'input[name=\"add_category_img\"]').on('change', 'input[name=\"add_category_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('submit', '#form_add_category').on('submit', '#form_add_category', function (e) {\n        e.preventDefault();\n\n        var title = $('input[name=\"add_category_title\"]').val();\n        var description = nl2br($('textarea[name=\"add_category_description\"]').val());\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var img = $('input[name=\"add_category_img\"]').val();\n\n            var $this = $('input[name=\"add_category_img\"]')[0];\n\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql(\"CREATE TABLE IF NOT EXISTS category (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME)\");\n\n                tx.executeSql('INSERT INTO category (title, description, img, dateadd, dateupdate) VALUES (\"' + title + '\", \"' + description + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\")');\n\n                $('input[name=\"add_category_title\"]').val('');\n                $('textarea[name=\"add_category_description\"]').val('');\n                $('file[name=\"add_category_img\"]').val('');\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_category_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_category_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_category_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_category_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        EDIT DATA\n    ************************************************************************/\n    $d.off('change', 'input[name=\"edit_img\"]').on('change', 'input[name=\"edit_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('click', '.view_item_edit').on('click', '.view_item_edit', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        $.post('/templates/edit.html', function (data) {\n\n            $('#template_load').html(data);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql('SELECT * FROM datas WHERE rowid=?', [rowid], function (tx, results) {\n\n                    if (results.rows) {\n\n                        var _data = results.rows[0];\n\n                        if (_data.encrypted === \"1\") {\n\n                            tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                                if (results.rows[0]) {\n\n                                    var key = results.rows[0].key;\n\n                                    var description = _data.description;\n                                    var description_decrypt = CryptoJS.AES.decrypt(description, key);\n                                    description_decrypt = description_decrypt.toString(CryptoJS.enc.Utf8);\n\n                                    description = description_decrypt.replace(/<br\\s*\\/?>/gi, \"\");\n                                    $('textarea[name=\"edit_description\"]').val(description);\n\n                                    $('input[name=\"encrypt_state\"]').val(\"1\");\n                                }\n                            });\n                        } else {\n\n                            var description = _data.description;\n                            description = description.replace(/<br\\s*\\/?>/gi, \"\");\n                            $('textarea[name=\"edit_description\"]').val(description);\n                            $('input[name=\"encrypt_state\"]').val(\"0\");\n                        }\n\n                        $('input[name=\"row_id\"]').val(rowid);\n                        $('input[name=\"edit_title\"]').val(_data.title);\n                        $('#add_img_loaded').html('<img src=\"/upload/' + _data.img + '\"/>');\n                    }\n                });\n            });\n        });\n    });\n\n    $d.off('submit', '#form_edit_data').on('submit', '#form_edit_data', function (e) {\n\n        e.preventDefault();\n\n        var rowid = $('input[name=\"row_id\"]').val();\n        var title = $('input[name=\"edit_title\"]').val();\n        var description = nl2br($('textarea[name=\"edit_description\"]').val());\n        var encrypt_sate = $('input[name=\"encrypt_state\"]').val();\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var _datetime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n            var img = $('input[name=\"edit_img\"]').val();\n\n            var $this = $('input[name=\"edit_img\"]')[0];\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                if (encrypt_sate === \"1\") {\n\n                    tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n\n                        if (results.rows[0]) {\n\n                            var key = results.rows[0].key;\n\n                            var description_encrypt = CryptoJS.AES.encrypt(description, key);\n                            description_encrypt = description_encrypt.toString();\n\n                            if (imgsend != \"default.png\") {\n\n                                tx.executeSql('UPDATE datas SET title=?, description=?, img=?, dateupdate=? WHERE rowid=?', [title, description_encrypt, imgsend, _datetime, rowid]);\n                            } else {\n                                tx.executeSql('UPDATE datas SET title=?, description=?, dateupdate=? WHERE rowid=?', [title, description_encrypt, _datetime, rowid]);\n                            }\n                        }\n                    });\n                } else {\n\n                    if (imgsend != \"default.png\") {\n\n                        tx.executeSql('UPDATE datas SET title=?, description=?, img=?, dateupdate=? WHERE rowid=?', [title, description, imgsend, _datetime, rowid]);\n                    } else {\n                        tx.executeSql('UPDATE datas SET title=?, description=?, dateupdate=? WHERE rowid=?', [title, description, _datetime, rowid]);\n                    }\n                }\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        VIEW DATA\n    ************************************************************************/\n    $d.off('click', '.view_item_delete').on('click', '.view_item_delete', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        $('.item-delete-confirmation[data-id=\"' + rowid + '\"]').fadeIn(300);\n    });\n\n    $d.off('click', '.item_confirm_delete').on('click', '.item_confirm_delete', function () {\n\n        var rowid = $(this).parent('.item-delete-confirmation').attr('data-id');\n\n        db.transaction(function (tx) {\n            tx.executeSql('DELETE FROM datas WHERE rowid=?', [rowid]);\n\n            $('#view_data').html('');\n\n            load_data(order);\n        });\n    });\n\n    $d.off('click', '.item_cancel_delete').on('click', '.item_cancel_delete', function () {\n\n        var rowid = $(this).parent('.item-delete-confirmation').attr('data-id');\n\n        $('.item-delete-confirmation[data-id=\"' + rowid + '\"]').fadeOut(300);\n    });\n\n    $d.off('click', '.category-hide').on('click', '.category-hide', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        if ($('.category-view-item[data-id=\"' + rowid + '\"]').is(':visible')) {\n            $(this).children('i').css('transform', 'rotate(0deg)');\n        } else {\n            $(this).children('i').css('transform', 'rotate(45deg)');\n        }\n\n        $('.category-view-item[data-id=\"' + rowid + '\"]').slideToggle(300);\n    });\n\n    $d.off('click', '.hide-item').on('click', '.hide-item', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        if ($('.description-item[data-id=\"' + rowid + '\"]').is(':visible')) {\n            $(this).children('i').css('transform', 'rotate(0deg)');\n        } else {\n            $(this).children('i').css('transform', 'rotate(45deg)');\n        }\n\n        $('.description-item[data-id=\"' + rowid + '\"]').slideToggle(300);\n    });\n\n    $d.off('click', '.view_show_all_description').on('click', '.view_show_all_description', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_hide_all_description').show();\n            $('.description-item').slideDown(300);\n        }\n    });\n\n    $d.off('click', '.view_hide_all_description').on('click', '.view_hide_all_description', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_show_all_description').show();\n            $('.description-item').slideUp(300);\n        }\n    });\n\n    $d.off('click', '.view_hide_all_item').on('click', '.view_hide_all_item', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_show_all_item').show();\n            $('.view-item').css('opacity', '0');\n            $('.secret-img').fadeIn(300);\n        }\n    });\n\n    $d.off('click', '.view_show_all_item').on('click', '.view_show_all_item', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_hide_all_item').show();\n            $('.view-item').css('opacity', '1');\n            $('.secret-img').fadeOut(300);\n        }\n    });\n\n    $d.off('mouseenter', '.grip').on('mouseenter', '.grip', function () {\n        var dataid = $(this).attr('data-id');\n        $('.grip-notice[data-id=\"' + dataid + '\"]').fadeIn(300);\n    });\n    $d.off('mouseleave', '.grip, .view-item').on('mouseleave', '.grip, .view-item', function () {\n        var dataid = $(this).attr('data-id');\n        $('.grip-notice[data-id=\"' + dataid + '\"]').fadeOut(300);\n    });\n\n    /*\n    //Disabled\n    $d.off('click', '.view_sort_item_asc').on('click', '.view_sort_item_asc', function(){\n         if( $('.view-item').is(':visible') ){\n             order = \"DESC\";\n             $('.fa-sort-amount-asc').hide()\n            $('.fa-sort-amount-desc').show()\n             $('.view-item').remove()\n            $('#view_data').html('')\n             load_data(order);\n             //setTimeout(function(){ load_data(order); },1000)\n        }\n    })\n     $d.off('click', '.view_sort_item_desc').on('click', '.view_sort_item_desc', function(){\n         if( $('.view-item').is(':visible') ){\n             order = \"ASC\";\n             $('.fa-sort-amount-desc').hide()\n            $('.fa-sort-amount-asc').show()\n             $('.view-item').remove()\n            $('#view_data').html('')\n             load_data(order);\n             //setTimeout(function(){ load_data(order); },1000)\n        }\n    })\n    */\n};\nexports.default = app;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ })

});