webpackJsonp([2],{

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar app = function app() {\n\n    var $d = $(document),\n        login = void 0,\n        email = void 0,\n        remember = \"0\",\n        datetime = moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        myIP = void 0;\n\n    if (window.openDatabase) {\n        var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n    } else {\n        new Promise(function (resolve) {\n            __webpack_require__.e/* require.ensure */(0/* duplicate */).then((function (require) {\n                resolve(__webpack_require__(0));\n            }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n        }).then(function (first_login) {\n            first_login.default();\n        });\n    }\n\n    var order = \"ASC\";\n\n    $('.icon-login').hide();\n    $('.nav-btn').fadeIn(500);\n    $('.nav-disconnect').fadeIn(500);\n\n    /***********************************************************************\n        FUNCTION\n    ************************************************************************/\n\n    var get_local_network_ip = function get_local_network_ip() {\n\n        window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\n        var pc = new RTCPeerConnection({ iceServers: [] }),\n            noop = function noop() {};\n\n        pc.createDataChannel(\"\");\n\n        pc.createOffer(pc.setLocalDescription.bind(pc), noop);\n\n        pc.onicecandidate = function (ice) {\n\n            if (!ice || !ice.candidate || !ice.candidate.candidate) return;\n\n            myIP = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n\n            pc.onicecandidate = noop;\n\n            return myIP;\n        };\n    };\n\n    get_local_network_ip();\n\n    var nl2br = function nl2br(str, is_xhtml) {\n        var breakTag = is_xhtml || typeof is_xhtml === 'undefined' ? '<br />' : '<br>';\n        return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n    };\n\n    var imageIsLoaded = function imageIsLoaded(e) {\n        $('#add_img_loaded').html('<img src=\"' + e.target.result + '\"/>');\n    };\n\n    var resize_img = function resize_img(file) {};\n\n    var copyFile = function copyFile(fs, path, filesrc, dirupload) {\n\n        var f = path.basename(filesrc);\n        var source = fs.createReadStream(filesrc);\n        var dest = fs.createWriteStream(path.resolve(dirupload, f));\n\n        source.pipe(dest);\n\n        source.on('end', function () {});\n        source.on('error', function (err) {\n            console.log(err);\n        });\n    };\n\n    var upload_img = function upload_img(img, $this) {\n\n        var imgsend = \"default.png\";\n\n        if (img.length >= 1) {\n\n            if ($this.files && $this.files[0]) {\n\n                var $thisfile = $this.files[0];\n                var originalfile = $thisfile.path;\n\n                var filename = $thisfile.name;\n                var filetype = $thisfile.type;\n                var filesize = $thisfile.size;\n\n                if (filetype == \"image/png\" || filetype == \"image/jpeg\") {\n\n                    copyFile(fs, path, originalfile, './upload/');\n\n                    imgsend = filename;\n                }\n            }\n        }\n\n        return imgsend;\n    };\n\n    var item_sortable = function item_sortable() {\n\n        $(\"#view_data\").sortable({\n            items: \".view-item\",\n            handle: \".grip\",\n            connectWith: \".category-view-item\",\n            opacity: 0.5,\n            axis: \"y\",\n            revert: true,\n            stop: function stop(event, ui) {\n\n                if (window.openDatabase) {\n\n                    var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n\n                    $('.view-item').each(function (i, v) {\n\n                        var position = i + 1;\n\n                        $(v).attr('data-position', i);\n                        var rowid = $(v).attr('data-id');\n\n                        $(v).find('.item-position').text(position);\n\n                        db.transaction(function (tx) {\n                            tx.executeSql('UPDATE datas SET position=? WHERE rowid=?', [i, rowid]);\n                        });\n                    });\n                }\n            }\n        });\n    };\n\n    var targetID = void 0;\n\n    var item_droppable = function item_droppable() {\n\n        $(\".category-view-item\").droppable({\n            accept: \".view-item\",\n            hoverClass: \"drop-hover\",\n            over: function over(event, ui) {\n                $(event.target).addClass('dropped');\n                targetID = $(event.target).attr('data-id');\n            },\n            drop: function drop(event, ui) {\n\n                targetID = $(event.target).attr('data-id');\n                var clone = $(ui.draggable[0]).clone();\n\n                $(ui.draggable[0]).addClass(\"ToRemove\");\n\n                var itemID = $(ui.draggable[0]).attr('data-id');\n\n                var check = $('.category-view-item[data-id=\"' + targetID + '\"]').find('.ui-sortable-placeholder');\n\n                console.log(check.length);\n\n                if (check.length != 1) {\n                    console.log('empty');\n                    $('.category-view-item[data-id=\"' + targetID + '\"]').append(clone);\n                } else {\n                    console.log('NOT empty');\n                    $(clone).insertBefore('.ui-sortable-placeholder');\n                    $('.ui-sortable-placeholder').hide();\n                }\n\n                //$(clone).insertBefore('.ui-sortable-placeholder')\n                //$('.ui-sortable-placeholder').hide()\n\n\n                $(clone).removeAttr('style');\n\n                $('.ToRemove').remove();\n\n                $('.category-view-item').removeClass('dropped');\n\n                db.transaction(function (tx) {\n\n                    tx.executeSql('UPDATE datas SET category=? WHERE rowid=?', [targetID, itemID]);\n                });\n\n                //},1000)\n            },\n            out: function out(event, ui) {\n\n                var itemID = $(ui.draggable[0]).attr('data-id');\n\n                db.transaction(function (tx) {\n                    tx.executeSql('UPDATE datas SET category=? WHERE rowid=?', [\"0\", itemID]);\n                });\n            }\n        });\n    };\n\n    var search_script = function search_script() {\n        /**************************************************\n            FILTER SEARCH KEYWORDS\n        **************************************************/\n        jQuery.expr[':'].icontains = function (a, i, m) {\n            var rExps = [{ re: /[\\xC0-\\xC6]/g, ch: \"A\" }, { re: /[\\xE0-\\xE6]/g, ch: \"a\" }, { re: /[\\xC8-\\xCB]/g, ch: \"E\" }, { re: /[\\xE8-\\xEB]/g, ch: \"e\" }, { re: /[\\xCC-\\xCF]/g, ch: \"I\" }, { re: /[\\xEC-\\xEF]/g, ch: \"i\" }, { re: /[\\xD2-\\xD6]/g, ch: \"O\" }, { re: /[\\xF2-\\xF6]/g, ch: \"o\" }, { re: /[\\xD9-\\xDC]/g, ch: \"U\" }, { re: /[\\xF9-\\xFC]/g, ch: \"u\" }, { re: /[\\xC7-\\xE7]/g, ch: \"c\" }, { re: /[\\xD1]/g, ch: \"N\" }, { re: /[\\xF1]/g, ch: \"n\" }];\n\n            var element = $(a).text();\n            var search = m[3];\n\n            $.each(rExps, function () {\n                element = element.replace(this.re, this.ch);\n                search = search.replace(this.re, this.ch);\n            });\n\n            return element.toUpperCase().indexOf(search.toUpperCase()) >= 0;\n        };\n        /* ..SEARCH.. */\n        $d.off('keyup', '#item_filter_keywords').on('keyup', '#item_filter_keywords', function () {\n\n            var searchvalue = $(this).val();\n\n            if (searchvalue.length >= 2) {\n                $('.keyword_data').hide();\n                //$('.modal-title-content').hide()\n                var keyword = $('.keyword_data:icontains(\"' + searchvalue + '\")').show();\n            } else {\n                $('.keyword_data').show();\n                //$('.modal-title-content').show()\n            }\n        });\n        /**************************************************\n            END -- FILTER SEARCH KEYWORDS\n        **************************************************/\n    };\n\n    var load_category = function load_category() {\n        var order = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ASC\";\n\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT rowid, * FROM category ORDER BY position ' + order, [], function (tx, results) {\n\n                if (results.rows) {\n\n                    var data = results.rows;\n\n                    $(data).each(function (i, v) {\n\n                        var category = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-category\">' + '<div class=\"title-block\">' + '<div data-id=\"' + v.rowid + '\" class=\"category-hide\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"img-category\"><img src=\"/upload/' + v.img + '\"></div>' + '<div class=\"title-category\">' + v.title + '</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"category-view-item\"></div>';\n                        '</div>';\n\n                        $('#view_data').prepend(category);\n\n                        $('.category-hide[data-id=\"' + v.rowid + '\"]').children('i').css('transform', 'rotate(45deg)');\n                    });\n                }\n            });\n        });\n    };\n\n    var load_data = function load_data() {\n        var order = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ASC\";\n\n\n        load_category();\n\n        setTimeout(function () {\n\n            if (window.openDatabase) {\n\n                var db = openDatabase('my_acess_db', '1.0', 'My access db', 5 * 1024 * 1024);\n\n                db.transaction(function (tx) {\n\n                    tx.executeSql('SELECT rowid, * FROM datas ORDER BY position ' + order, [], function (tx, results) {\n\n                        if (results.rows) {\n\n                            var data = results.rows;\n\n                            $(data).each(function (i, v) {\n\n                                var description = v.description;\n\n                                if (v.encrypted === \"1\") {\n\n                                    tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                                        if (results.rows[0]) {\n\n                                            var key = results.rows[0].key;\n\n                                            description = CryptoJS.AES.decrypt(v.description, key);\n                                            description = description.toString(CryptoJS.enc.Utf8);\n\n                                            var item = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-item keyword_data\">' + '<div class=\"nav-item\">' + '<div data-id=\"' + v.rowid + '\" class=\"hide-item\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"title-item\">' + v.title + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip-notice\">Drag me..</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip\"><i class=\"fa fa-paw\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-trash view_item_delete\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-pencil view_item_edit\" aria-hidden=\"true\"></i></div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"item-delete-confirmation\">' + '<div class=\"item_confirm_delete\">DELETE</div><div class=\"item_cancel_delete\">CANCEL</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"description-item\">' + '<div class=\"img\"><img src=\"/upload/' + v.img + '\" alt=\"\" /></div>' + '<div class=\"text\">' + description + '</div>' + '</div>' + '<div class=\"date-item\">' + '<div class=\"item-encrypt\">Encrypted..</div>' + '<div class=\"item-position\">' + position + '</div>' + '<div class=\"date-up\">Updated : ' + v.dateupdate + '</div>' + '</div>' + '</div>';\n\n                                            if (v.category != \"0\") {\n\n                                                if ($('.category-view-item[data-id=\"' + v.category + '\"]').is(':visible')) {\n\n                                                    $('.category-view-item[data-id=\"' + v.category + '\"]').append(item);\n                                                } else {\n\n                                                    $('#view_data').append(item);\n                                                }\n                                            } else {\n                                                $('#view_data').append(item);\n                                            }\n                                        }\n                                    });\n                                } else {\n                                    var item = '<div data-id=\"' + v.rowid + '\" data-position=\"' + v.position + '\" class=\"view-item keyword_data\">' + '<div class=\"nav-item\">' + '<div data-id=\"' + v.rowid + '\" class=\"hide-item\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>' + '<div class=\"title-item\">' + v.title + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip-notice\">Drag me..</div>' + '<div data-id=\"' + v.rowid + '\" class=\"grip\"><i class=\"fa fa-paw\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-trash view_item_delete\" aria-hidden=\"true\"></i></div>' + '<div class=\"btn-nav\"><i data-id=\"' + v.rowid + '\" class=\"fa fa-pencil view_item_edit\" aria-hidden=\"true\"></i></div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"item-delete-confirmation\">' + '<div class=\"item_confirm_delete\">DELETE</div><div class=\"item_cancel_delete\">CANCEL</div>' + '</div>' + '<div data-id=\"' + v.rowid + '\" class=\"description-item\">' + '<div class=\"img\"><img src=\"/upload/' + v.img + '\" alt=\"\" /></div>' + '<div class=\"text\">' + description + '</div>' + '</div>' + '<div class=\"date-item\">' + '<div class=\"item-encrypt\">Not encrypted..</div>' + '<div class=\"item-position\">' + position + '</div>' + '<div class=\"date-up\">Updated : ' + v.dateupdate + '</div>' + '</div>' + '</div>';\n\n                                    if (v.category != \"0\") {\n\n                                        if ($('.category-view-item[data-id=\"' + v.category + '\"]').is(':visible')) {\n\n                                            $('.category-view-item[data-id=\"' + v.category + '\"]').append(item);\n                                        } else {\n                                            $('#view_data').append(item);\n                                        }\n                                    } else {\n                                        $('#view_data').append(item);\n                                    }\n                                }\n\n                                var position = i + 1;\n\n                                tx.executeSql('UPDATE datas SET position=? WHERE rowid=?', [i, v.rowid]);\n                            });\n\n                            item_sortable();\n\n                            search_script();\n\n                            setTimeout(function () {\n                                item_droppable();\n                            }, 2000);\n                        }\n                    });\n                });\n            } else {\n                new Promise(function (resolve) {\n                    __webpack_require__.e/* require.ensure */(0/* duplicate */).then((function (require) {\n                        resolve(__webpack_require__(0));\n                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n                }).then(function (first_login) {\n                    first_login.default();\n                });\n            }\n        }, 500);\n    };\n\n    var backup_database = function backup_database(table) {\n\n        var data = new Object();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM \" + table, [], function (tx, results) {\n\n                if (results) {\n                    $(results.rows).each(function (i, v) {\n                        data[i] = v;\n                    });\n                    return data;\n                } else {\n                    return null;\n                }\n            });\n        }, null);\n    };\n\n    var backup = function backup(table) {\n\n        var def = new $.Deferred();\n\n        db.readTransaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM \" + table, [], function (tx, results) {\n\n                var data = results.rows;\n\n                def.resolve(data);\n            });\n        }, null);\n\n        return def;\n    };\n\n    var get_synchronise_table = function get_synchronise_table() {\n\n        var thekey = new $.Deferred();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM synchronize\", [], function (tx, results) {\n\n                if (results) {\n                    thekey.resolve(results.rows[0].key);\n                } else {\n                    thekey.resolve('null');\n                }\n            });\n        }, function (err) {\n            console.log(err);\n            thekey.resolve('null');\n        });\n\n        return thekey;\n    };\n\n    var generate_key = function generate_key() {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        for (var i = 0; i < 50; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }return text;\n    };\n\n    var create_synchronise_table = function create_synchronise_table() {\n\n        db.transaction(function (tx) {\n\n            var key = generate_key();\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize (key, active, datestart DATETIME)');\n\n            tx.executeSql('INSERT INTO synchronize (key, active, datestart) VALUES (\"' + key + '\", \"1\", \"' + datetime + '\")');\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize_autorized (key, ip, machine, dateadd DATETIME)');\n\n            tx.executeSql('CREATE TABLE IF NOT EXISTS synchronize_log (ip, key, datelog DATETIME)');\n\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS datas (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME, encrypted VARCHAR NOT NULL DEFAULT '0', category VARCHAR NOT NULL DEFAULT '0')\");\n        }, function (err) {\n\n            console.log(err);\n        });\n\n        return;\n    };\n\n    var delete_synchronise_table = function delete_synchronise_table() {\n\n        db.transaction(function (tx) {\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize\");\n            });\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize_autorized\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize_autorized\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize_autorized\");\n            });\n\n            // FOR DEV...\n            tx.executeSql(\"DROP TABLE synchronize_log\", [], function (tx, results) {\n                console.log(\"Successfully Dropped synchronize_log\");\n            }, function (tx, error) {\n                console.log(\"Could not delete synchronize_log\");\n            });\n        });\n    };\n\n    var get_server_sync_on_start = function get_server_sync_on_start() {\n\n        var key = null;\n\n        $.when(get_synchronise_table()).then(function (thiskey) {\n\n            if (thiskey != 'null') {\n                key = thiskey;\n                setTimeout(function () {\n                    http_server_start(myIP, key);\n                }, 1500);\n            }\n        });\n    };\n    get_server_sync_on_start();\n\n    var sync_data_check = function sync_data_check(str) {\n\n        var def = new $.Deferred();\n\n        db.readTransaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM datas WHERE title=?\", [str], function (tx, results) {\n\n                if (results) {\n                    var item = results.rows;\n                    def.resolve(item);\n                } else {\n                    def = \"no_data\";\n                }\n            });\n        }, function (err) {\n            console.log(err);\n        });\n\n        return def;\n    };\n\n    var sync_data_insert = function sync_data_insert(data) {\n\n        var title = data.title;\n        var description = data.description;\n        var img = \"default.png\";\n        var position = \"0\";\n        var dateadd = data.dateadd;\n        var dateupdate = data.dateupdate;\n        var encrypted = data.encrypted;\n\n        db.transaction(function (tx) {\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS datas (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME, encrypted VARCHAR NOT NULL DEFAULT '0', category VARCHAR NOT NULL DEFAULT '0')\");\n            tx.executeSql('INSERT INTO datas (title, description, img, position, dateadd, dateupdate, encrypted, category) VALUES (\"' + title + '\", \"' + description + '\", \"' + img + '\", \"' + position + '\", \"' + dateadd + '\", \"' + dateupdate + '\", \"' + encrypted + '\", \"0\")');\n        });\n\n        /*\n        db.transaction(function(tx) {\n            tx.executeSql('INSERT INTO datas (title, description, img, position, dateadd, dateupdate, encrypted) VALUES (\"'+title+'\", \"'+description+'\", \"'+img+'\", \"'+position+'\", \"'+dateadd+'\", \"'+dateupdate+'\", \"'+encrypted+'\")');\n        })\n        */\n    };\n\n    var get_encryption = function get_encryption() {\n\n        var data = new $.Deferred();\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS encryption (key, state VARCHAR NOT NULL DEFAULT '0')\");\n\n            tx.executeSql(\"SELECT rowid, * FROM encryption\", [], function (tx, results) {\n\n                if (results.rows[0]) {\n                    data.resolve(results.rows[0]);\n                } else {\n                    data.resolve('null');\n                }\n            });\n        }, function (err) {\n            console.log(err);\n            data.resolve('null');\n        });\n\n        return data;\n    };\n\n    var add_key_encryption = function add_key_encryption(str) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT * FROM encryption\", [], function (tx, results) {\n\n                if (results.rows[0]) {\n                    tx.executeSql('UPDATE encryption SET key=? where rowid=?', [str, 1]);\n                } else {\n\n                    tx.executeSql('INSERT INTO encryption (key) VALUES (\"' + str + '\")');\n                }\n            });\n        });\n    };\n\n    var encryption_state_value = function encryption_state_value(value) {\n\n        db.transaction(function (tx) {\n\n            if (value === \"1\") {\n                tx.executeSql('UPDATE encryption SET state=? where rowid=?', [\"1\", 1]);\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n                        var key = results.rows[0].key;\n\n                        crypt_data(key);\n                    }\n                });\n            }\n\n            if (value === \"0\") {\n                tx.executeSql('UPDATE encryption SET state=? where rowid=?', [\"0\", 1]);\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n                        var key = results.rows[0].key;\n                        decrypt_data(key);\n                    }\n                });\n            }\n        });\n    };\n\n    var crypt_data = function crypt_data(key) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT rowid, * FROM datas\", [], function (tx, results) {\n\n                if (results) {\n\n                    $.each(results.rows, function (k, v) {\n\n                        var description_encrypt = CryptoJS.AES.encrypt(v.description, key);\n                        description_encrypt = description_encrypt.toString();\n\n                        var id = v.rowid;\n\n                        if (v.encrypted === \"0\") {\n                            tx.executeSql('UPDATE datas SET description=? where rowid=?', [description_encrypt, id]);\n                            tx.executeSql('UPDATE datas SET encrypted=? where rowid=?', [\"1\", id]);\n                        }\n                    });\n                }\n            });\n        });\n    };\n\n    var decrypt_data = function decrypt_data(key) {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT rowid, * FROM datas\", [], function (tx, results) {\n\n                if (results) {\n\n                    $.each(results.rows, function (k, v) {\n\n                        var description_decrypt = CryptoJS.AES.decrypt(v.description, key);\n                        description_decrypt = description_decrypt.toString(CryptoJS.enc.Utf8);\n\n                        var id = v.rowid;\n\n                        if (v.encrypted === \"1\") {\n                            tx.executeSql('UPDATE datas SET description=? where rowid=?', [description_decrypt, id]);\n                            tx.executeSql('UPDATE datas SET encrypted=? where rowid=?', [\"0\", id]);\n                        }\n                    });\n                }\n            });\n        });\n    };\n\n    var backup_download = function backup_download() {\n\n        //GET BACKUP DATA BASE\n        var file = path.basename('/data') + \"/datas.json\";\n        fs.exists(file, function (exists) {\n\n            if (exists) {\n\n                $('#result_export_database_file').show();\n\n                fs.readFile(file, 'utf8', function (err, data) {\n\n                    if (!err) {\n                        var download = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n                        $('<a href=\"data:' + download + '\" download=\"datas.json\">Download JSON file</a>').appendTo('#result_export_database_file');\n                    }\n                });\n            }\n        });\n    };\n\n    /***********************************************\n        **FOR DEV**\n    ***********************************************/\n    var add_column = function add_column() {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT encrypted FROM datas\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: encrypted)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE datas ADD encrypted VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT category FROM datas\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: category)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE datas ADD category VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n\n        db.transaction(function (tx) {\n\n            tx.executeSql(\"SELECT state FROM encryption\", [], function (tx, results) {});\n        }, function (err) {\n            console.log(err);\n            if (err.message === \"could not prepare statement (1 no such column: state)\") {\n                db.transaction(function (tx) {\n                    tx.executeSql(\"ALTER TABLE encryption ADD state VARCHAR NOT NULL DEFAULT '0' \");\n                });\n            }\n        });\n    };\n    add_column();\n    /***********************************************\n        END **FOR DEV**\n    ***********************************************/\n\n    /***********************************************************************\n        START\n    ************************************************************************/\n    $('#app_nav').show();\n\n    db.transaction(function (tx) {\n\n        tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n            if (results.rows[0]) {\n                var user = results.rows[0];\n\n                login = user.login;\n                email = user.email;\n                remember = user.remember;\n            }\n        });\n    });\n\n    // ** ON START LOAD VIEW.HTML **\n    $.post('/templates/view.html', function (data) {\n\n        $('#template_load').html(data);\n\n        load_data(order);\n    });\n\n    /***********************************************************************\n        NAVIGATION\n    ************************************************************************/\n\n    $d.off('click', '#return_home').on('click', '#return_home', function () {\n        $.post('/templates/view.html', function (data) {\n\n            $('#template_load').html(data);\n\n            load_data(order);\n        });\n    });\n\n    $d.off('click', '#show_params').on('click', '#show_params', function () {\n\n        $.post('/templates/params.html', function (data) {\n\n            $('#template_load').html(data);\n\n            var key = null;\n\n            //GET SYNCHRONIZE & ENCRYPTION..\n            $.when(get_synchronise_table(), get_encryption()).then(function (data, encryption) {\n\n                // SYNCHRONISE DATA\n                if (data != 'null') {\n                    key = data;\n\n                    $('#open_browser_localhost').fadeIn(300);\n\n                    $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n\n                    $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access. Remove this email after sync app...&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n\n                    $('input[name=\"http_server\"]').prop('checked', true);\n\n                    $('#params_encrypt_data_state').show();\n                } else {\n                    $('#params_encrypt_data_state').hide();\n                }\n\n                // ENCRYPTION DATA\n                if (encryption != 'null' || encryption != null) {\n\n                    $('#params_encryption').val(encryption.key);\n                    $('#params_encrypt_data_state').show();\n\n                    if (encryption.state === \"1\") {\n                        $('input#encrypt_data').prop('checked', true);\n                        $('#params_encryption').prop('readonly', true);\n                        $('#params_encryption').prop('disabled', true);\n                    } else {\n                        $('input#encrypt_data').prop('checked', false);\n                        $('#params_encryption').prop('readonly', false);\n                        $('#params_encryption').prop('disabled', false);\n                    }\n                }\n            });\n\n            // GET REMEMBER\n            if (remember === \"1\") {\n                $('input[name=\"params_remember\"]').prop('checked', true);\n            } else {\n                $('input[name=\"params_remember\"]').prop('checked', false);\n            }\n\n            backup_download();\n\n            $('#get_api_for_synchronize_result_html').remove();\n        });\n    });\n\n    $d.off('click', '#add_data').on('click', '#add_data', function () {\n        $.post('/templates/add.html', function (data) {\n            $('#template_load').html(data);\n        });\n    });\n\n    $d.off('click', '#add_category').on('click', '#add_category', function () {\n        $.post('/templates/add_category.html', function (data) {\n            $('#template_load').html(data);\n        });\n    });\n\n    $d.off('click', '#app_return').on('click', '#app_return', function () {\n        $.post('/templates/view.html', function (data) {\n            $('#template_load').html(data);\n            add_navigation();\n        });\n    });\n\n    $d.off('click', '#app_disconnect').on('click', '#app_disconnect', function () {\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n                tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"0\", 1], function (tx) {\n                    new Promise(function (resolve) {\n                        __webpack_require__.e/* require.ensure */(1/* duplicate */).then((function (require) {\n                            resolve(__webpack_require__(8));\n                        }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n                    }).then(function (login) {\n                        login.default();\n                    });\n                });\n            });\n        });\n    });\n\n    /***********************************************************************\n        PARAMS\n    ************************************************************************/\n\n    $d.off('change', 'input[name=\"http_server\"]').on('change', 'input[name=\"http_server\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        var key = null;\n\n        if (val == true) {\n\n            $.when(get_synchronise_table()).then(function (thiskey) {\n\n                if (thiskey != 'null') {\n                    key = thiskey;\n                    $('#open_browser_localhost').fadeIn(300);\n                    $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n                    $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access app&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n                } else {\n\n                    create_synchronise_table();\n\n                    $.when(get_synchronise_table()).then(function (newkey) {\n                        key = newkey;\n                        $('#open_browser_localhost').fadeIn(300);\n                        $('#load_link_for_sync').html('http://' + myIP + ':3000/' + key);\n                        $('#a_link_share_sync').attr('href', 'mailto:?subject=The link for share my access app&&cc=' + email + '&body=http://' + myIP + ':3000/' + key);\n                    });\n                }\n            });\n\n            setTimeout(function () {\n                win_reload();\n            }, 1500);\n        } else {\n\n            $('#open_browser_localhost').fadeOut(300);\n            $('#sync_key_show').remove();\n\n            delete_synchronise_table();\n\n            setTimeout(function () {\n                win_reload();\n            }, 1000);\n        }\n    });\n\n    $d.off('change', 'input[name=\"params_remember\"]').on('change', 'input[name=\"params_remember\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        db.transaction(function (tx) {\n\n            tx.executeSql('SELECT * FROM user', [], function (tx, results) {\n\n                if (val == true) {\n                    tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"1\", 1]);\n                    remember = \"1\";\n                } else {\n                    tx.executeSql('UPDATE user SET remember=? where rowid=?', [\"0\", 1]);\n\n                    remember = \"0\";\n                }\n            });\n        });\n    });\n\n    $d.off('change', 'input[name=\"export_database\"]').on('change', 'input[name=\"export_database\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        if (val == true) {\n\n            //let datasdata   = backup_database(\"datas\");\n\n            $.when(backup(\"datas\"), backup(\"user\")).then(function (datas, user) {\n\n                if (datas.length >= 1) {\n\n                    $('input[name=\"export_database\"]').hide();\n                    $('#result_export_database').fadeIn(300).append('<small>Data succesfully exported</small>');\n\n                    var datadatas = { datas: datas };\n                    var serializedDataData = JSON.stringify(datadatas);\n\n                    fs.writeFile(\"data/datas.json\", serializedDataData, function (err) {\n\n                        if (err) {\n                            console.error(err);\n                            return;\n                        };\n\n                        $('input[name=\"export_database\"]').prop('checked', false);\n\n                        if ($('#result_export_database_file').is(':hidden')) {\n                            backup_download();\n                        }\n                    });\n                }\n\n                if (user.length >= 1) {\n                    $('input[name=\"export_database\"]').hide();\n                    $('#result_export_database').fadeIn(300).append('<small>User succesfully exported</small>');\n\n                    var datauser = { user: user };\n                    var serializedDataUser = JSON.stringify(datauser);\n                }\n\n                setTimeout(function () {\n                    $('#result_export_database').fadeOut(300).html('');\n                    $('input[name=\"export_database\"]').show(300);\n                }, 3000);\n            });\n        }\n    });\n\n    $d.off('click', '#get_api_for_synchronize').on('click', '#get_api_for_synchronize', function (e) {\n\n        e.preventDefault();\n\n        var apilink = $('#api_for_synchronize').val();\n\n        $('#get_api_for_synchronize_result_html').remove();\n\n        if (apilink.length >= 25) {\n\n            $.getJSON(apilink, function (data) {\n\n                if (data) {\n\n                    var items = data.datas;\n\n                    $.each(items, function (k, v) {\n\n                        var title = v.title;\n\n                        $.when(sync_data_check(title)).then(function (items) {\n\n                            if (items.length <= 0) {\n                                sync_data_insert(v);\n                                $('#get_api_for_synchronize_result').html('<div id=\"get_api_for_synchronize_result_html\">' + title + ' insered..</div>');\n                            } else {\n                                $('#get_api_for_synchronize_result').html('<div id=\"get_api_for_synchronize_result_html\">All items are allready on database..</div>');\n                            }\n                        });\n                    });\n                }\n            });\n        } else if (apilink.length === 0) {\n            $('#api_for_synchronize').val(\"Enter link in field..\");\n\n            setTimeout(function () {\n                $('#api_for_synchronize').val(apilink);\n            }, 2000);\n        } else {\n            $('#api_for_synchronize').val(\"Link is not valid...\");\n\n            setTimeout(function () {\n                $('#api_for_synchronize').val(apilink);\n            }, 2000);\n        }\n    });\n\n    $d.off('click', '#send_params_encryption').on('click', '#send_params_encryption', function (e) {\n        e.preventDefault();\n\n        var value = $('#params_encryption').val();\n\n        if (value.length >= 8) {\n            add_key_encryption(value);\n\n            $('#params_encryption_result').html('<div id=\"params_encryption_result_html\">Added !</div>');\n            setTimeout(function () {\n                $('#params_encryption_result_html').remove();\n            }, 1500);\n        } else {\n            $('#params_encryption').val('8 print minimum required..');\n            setTimeout(function () {\n                $('#params_encryption').val(value);\n            }, 2000);\n        }\n    });\n\n    $d.off('change', 'input[name=\"encrypt_data\"]').on('change', 'input[name=\"encrypt_data\"]', function () {\n\n        var val = $(this).prop('checked');\n\n        if (val == true) {\n            encryption_state_value(\"1\");\n            $('#params_encryption').prop('readonly', true);\n            $('#params_encryption').prop('disabled', true);\n\n            $('#encrypt_data_result').html('<div id=\"encrypt_data_result_html\">Crypted !</div>');\n            setTimeout(function () {\n                $('#encrypt_data_result_html').remove();\n            }, 1500);\n        } else {\n            encryption_state_value(\"0\");\n            $('#params_encryption').prop('readonly', false);\n            $('#params_encryption').prop('disabled', false);\n\n            $('#encrypt_data_result').html('<div id=\"encrypt_data_result_html\">Decrypted !</div>');\n            setTimeout(function () {\n                $('#encrypt_data_result_html').remove();\n            }, 1500);\n        }\n    });\n\n    $d.off('change', 'input[name=\"import_database\"]').on('change', 'input[name=\"import_database\"]', function () {\n\n        var file = $(this).val();\n\n        fs.readFile(file, 'utf8', function (err, data) {\n            if (err) {\n                console.log(err);\n            } else {\n\n                var json = $.parseJSON(data);\n                var jsondata = json.datas;\n\n                $.each(jsondata, function (k, v) {\n\n                    var title = v.title;\n\n                    $.when(sync_data_check(title)).then(function (items) {\n\n                        if (items.length <= 0) {\n\n                            sync_data_insert(v);\n                            $('#result_import_database').text(v.title + ' insered in database..').show();\n                        } else {\n                            $('#result_import_database').text('All items are allready on database..').show();\n                        }\n                    });\n                });\n            }\n        });\n    });\n\n    $d.off('click', '.key_encription_show').on('click', '.key_encription_show', function () {\n\n        $('.key_encription_show').hide();\n        $('.key_encription_hide').show();\n\n        $('input[name=\"params_encryption\"]').attr('type', 'text');\n    });\n\n    $d.off('click', '.key_encription_hide').on('click', '.key_encription_hide', function () {\n\n        $('.key_encription_hide').hide();\n        $('.key_encription_show').show();\n\n        $('input[name=\"params_encryption\"]').attr('type', 'password');\n    });\n\n    /***********************************************************************\n        ADD DATA\n    ************************************************************************/\n    $d.off('change', 'input[name=\"add_img\"]').on('change', 'input[name=\"add_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('submit', '#form_add_data').on('submit', '#form_add_data', function (e) {\n        e.preventDefault();\n\n        var title = $('input[name=\"add_title\"]').val();\n        var description = nl2br($('textarea[name=\"add_description\"]').val());\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var img = $('input[name=\"add_img\"]').val();\n\n            var $this = $('input[name=\"add_img\"]')[0];\n\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql(\"CREATE TABLE IF NOT EXISTS datas (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME, encrypted VARCHAR NOT NULL DEFAULT '0', category VARCHAR NOT NULL DEFAULT '0')\");\n\n                tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                    if (results.rows[0]) {\n\n                        var key = results.rows[0].key;\n\n                        var description_encrypt = CryptoJS.AES.encrypt(description, key);\n                        description_encrypt = description_encrypt.toString();\n\n                        tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate, encrypted, category) VALUES (\"' + title + '\", \"' + description_encrypt + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\", \"1\", \"0\")');\n                    } else {\n                        tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate, encrypted, category) VALUES (\"' + title + '\", \"' + description + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\", \"0\", \"0\")');\n                    }\n                });\n\n                //tx.executeSql('INSERT INTO datas (title, description, img, dateadd, dateupdate) VALUES (\"'+title+'\", \"'+description+'\", \"'+imgsend+'\", \"'+datetime+'\", \"'+datetime+'\")');\n\n                $('input[name=\"add_title\"]').val('');\n                $('textarea[name=\"add_description\"]').val('');\n                $('file[name=\"add_img\"]').val('');\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        ADD CATEGORY\n    ************************************************************************/\n    $d.off('change', 'input[name=\"add_category_img\"]').on('change', 'input[name=\"add_category_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('submit', '#form_add_category').on('submit', '#form_add_category', function (e) {\n        e.preventDefault();\n\n        var title = $('input[name=\"add_category_title\"]').val();\n        var description = nl2br($('textarea[name=\"add_category_description\"]').val());\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var img = $('input[name=\"add_category_img\"]').val();\n\n            var $this = $('input[name=\"add_category_img\"]')[0];\n\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql(\"CREATE TABLE IF NOT EXISTS category (title, description LONGTEXT, img, position, dateadd DATETIME, dateupdate DATETIME)\");\n\n                tx.executeSql('INSERT INTO category (title, description, img, dateadd, dateupdate) VALUES (\"' + title + '\", \"' + description + '\", \"' + imgsend + '\", \"' + datetime + '\", \"' + datetime + '\")');\n\n                $('input[name=\"add_category_title\"]').val('');\n                $('textarea[name=\"add_category_description\"]').val('');\n                $('file[name=\"add_category_img\"]').val('');\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_category_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_category_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_category_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_category_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        EDIT DATA\n    ************************************************************************/\n    $d.off('change', 'input[name=\"edit_img\"]').on('change', 'input[name=\"edit_img\"]', function () {\n\n        if (this.files && this.files[0]) {\n\n            var reader = new FileReader();\n            reader.onload = imageIsLoaded;\n\n            reader.readAsDataURL(this.files[0]);\n        }\n    });\n\n    $d.off('click', '.view_item_edit').on('click', '.view_item_edit', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        $.post('/templates/edit.html', function (data) {\n\n            $('#template_load').html(data);\n\n            db.transaction(function (tx) {\n\n                tx.executeSql('SELECT * FROM datas WHERE rowid=?', [rowid], function (tx, results) {\n\n                    if (results.rows) {\n\n                        var _data = results.rows[0];\n\n                        if (_data.encrypted === \"1\") {\n\n                            tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n                                if (results.rows[0]) {\n\n                                    var key = results.rows[0].key;\n\n                                    var description = _data.description;\n                                    var description_decrypt = CryptoJS.AES.decrypt(description, key);\n                                    description_decrypt = description_decrypt.toString(CryptoJS.enc.Utf8);\n\n                                    description = description_decrypt.replace(/<br\\s*\\/?>/gi, \"\");\n                                    $('textarea[name=\"edit_description\"]').val(description);\n\n                                    $('input[name=\"encrypt_state\"]').val(\"1\");\n                                }\n                            });\n                        } else {\n\n                            var description = _data.description;\n                            description = description.replace(/<br\\s*\\/?>/gi, \"\");\n                            $('textarea[name=\"edit_description\"]').val(description);\n                            $('input[name=\"encrypt_state\"]').val(\"0\");\n                        }\n\n                        $('input[name=\"row_id\"]').val(rowid);\n                        $('input[name=\"edit_title\"]').val(_data.title);\n                        $('#add_img_loaded').html('<img src=\"/upload/' + _data.img + '\"/>');\n                    }\n                });\n            });\n        });\n    });\n\n    $d.off('submit', '#form_edit_data').on('submit', '#form_edit_data', function (e) {\n\n        e.preventDefault();\n\n        var rowid = $('input[name=\"row_id\"]').val();\n        var title = $('input[name=\"edit_title\"]').val();\n        var description = nl2br($('textarea[name=\"edit_description\"]').val());\n        var encrypt_sate = $('input[name=\"encrypt_state\"]').val();\n\n        if (title.length >= 1 && description.length >= 1) {\n\n            var _datetime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n            var img = $('input[name=\"edit_img\"]').val();\n\n            var $this = $('input[name=\"edit_img\"]')[0];\n            var imgsend = upload_img(img, $this);\n\n            db.transaction(function (tx) {\n\n                if (encrypt_sate === \"1\") {\n\n                    tx.executeSql(\"SELECT key FROM encryption\", [], function (tx, results) {\n\n                        if (results.rows[0]) {\n\n                            var key = results.rows[0].key;\n\n                            var description_encrypt = CryptoJS.AES.encrypt(description, key);\n                            description_encrypt = description_encrypt.toString();\n\n                            if (imgsend != \"default.png\") {\n\n                                tx.executeSql('UPDATE datas SET title=?, description=?, img=?, dateupdate=? WHERE rowid=?', [title, description_encrypt, imgsend, _datetime, rowid]);\n                            } else {\n                                tx.executeSql('UPDATE datas SET title=?, description=?, dateupdate=? WHERE rowid=?', [title, description_encrypt, _datetime, rowid]);\n                            }\n                        }\n                    });\n                } else {\n\n                    if (imgsend != \"default.png\") {\n\n                        tx.executeSql('UPDATE datas SET title=?, description=?, img=?, dateupdate=? WHERE rowid=?', [title, description, imgsend, _datetime, rowid]);\n                    } else {\n                        tx.executeSql('UPDATE datas SET title=?, description=?, dateupdate=? WHERE rowid=?', [title, description, _datetime, rowid]);\n                    }\n                }\n\n                $.post('/templates/view.html', function (data) {\n\n                    $('#template_load').html(data);\n\n                    load_data(order);\n                });\n            });\n        } else {\n\n            if (title.length <= 0) {\n\n                $('input[name=\"add_title\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('input[name=\"add_title\"]').val(title);\n                }, 2000);\n            }\n\n            if (description.length <= 0) {\n\n                $('textarea[name=\"add_description\"]').val('this field is empty..');\n\n                setTimeout(function () {\n                    $('textarea[name=\"add_description\"]').val(description);\n                }, 2000);\n            }\n        }\n    });\n\n    /***********************************************************************\n        VIEW DATA\n    ************************************************************************/\n    $d.off('click', '.view_item_delete').on('click', '.view_item_delete', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        $('.item-delete-confirmation[data-id=\"' + rowid + '\"]').fadeIn(300);\n    });\n\n    $d.off('click', '.item_confirm_delete').on('click', '.item_confirm_delete', function () {\n\n        var rowid = $(this).parent('.item-delete-confirmation').attr('data-id');\n\n        db.transaction(function (tx) {\n            tx.executeSql('DELETE FROM datas WHERE rowid=?', [rowid]);\n\n            $('#view_data').html('');\n\n            load_data(order);\n        });\n    });\n\n    $d.off('click', '.item_cancel_delete').on('click', '.item_cancel_delete', function () {\n\n        var rowid = $(this).parent('.item-delete-confirmation').attr('data-id');\n\n        $('.item-delete-confirmation[data-id=\"' + rowid + '\"]').fadeOut(300);\n    });\n\n    $d.off('click', '.category-hide').on('click', '.category-hide', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        if ($('.category-view-item[data-id=\"' + rowid + '\"]').is(':visible')) {\n            $(this).children('i').css('transform', 'rotate(0deg)');\n        } else {\n            $(this).children('i').css('transform', 'rotate(45deg)');\n        }\n\n        $('.category-view-item[data-id=\"' + rowid + '\"]').slideToggle(300);\n    });\n\n    $d.off('click', '.hide-item').on('click', '.hide-item', function () {\n\n        var rowid = $(this).attr('data-id');\n\n        if ($('.description-item[data-id=\"' + rowid + '\"]').is(':visible')) {\n            $(this).children('i').css('transform', 'rotate(0deg)');\n        } else {\n            $(this).children('i').css('transform', 'rotate(45deg)');\n        }\n\n        $('.description-item[data-id=\"' + rowid + '\"]').slideToggle(300);\n    });\n\n    $d.off('click', '.view_show_all_description').on('click', '.view_show_all_description', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_hide_all_description').show();\n            $('.description-item').slideDown(300);\n        }\n    });\n\n    $d.off('click', '.view_hide_all_description').on('click', '.view_hide_all_description', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_show_all_description').show();\n            $('.description-item').slideUp(300);\n        }\n    });\n\n    $d.off('click', '.view_hide_all_item').on('click', '.view_hide_all_item', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_show_all_item').show();\n            $('.view-item').css('opacity', '0');\n            $('.secret-img').fadeIn(300);\n        }\n    });\n\n    $d.off('click', '.view_show_all_item').on('click', '.view_show_all_item', function () {\n\n        if ($('.view-item').is(':visible')) {\n            $(this).hide();\n            $('.view_hide_all_item').show();\n            $('.view-item').css('opacity', '1');\n            $('.secret-img').fadeOut(300);\n        }\n    });\n\n    $d.off('mouseenter', '.grip').on('mouseenter', '.grip', function () {\n        var dataid = $(this).attr('data-id');\n        $('.grip-notice[data-id=\"' + dataid + '\"]').fadeIn(300);\n    });\n    $d.off('mouseleave', '.grip, .view-item').on('mouseleave', '.grip, .view-item', function () {\n        var dataid = $(this).attr('data-id');\n        $('.grip-notice[data-id=\"' + dataid + '\"]').fadeOut(300);\n    });\n\n    /*\n    //Disabled\n    $d.off('click', '.view_sort_item_asc').on('click', '.view_sort_item_asc', function(){\n         if( $('.view-item').is(':visible') ){\n             order = \"DESC\";\n             $('.fa-sort-amount-asc').hide()\n            $('.fa-sort-amount-desc').show()\n             $('.view-item').remove()\n            $('#view_data').html('')\n             load_data(order);\n             //setTimeout(function(){ load_data(order); },1000)\n        }\n    })\n     $d.off('click', '.view_sort_item_desc').on('click', '.view_sort_item_desc', function(){\n         if( $('.view-item').is(':visible') ){\n             order = \"ASC\";\n             $('.fa-sort-amount-desc').hide()\n            $('.fa-sort-amount-asc').show()\n             $('.view-item').remove()\n            $('#view_data').html('')\n             load_data(order);\n             //setTimeout(function(){ load_data(order); },1000)\n        }\n    })\n    */\n};\nexports.default = app;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9hc3NldHMvanMvYXBwLmpzPzhiOTUiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGFwcCA9IGZ1bmN0aW9uKCl7XG5cbiAgICBsZXQgJGQgPSAkKGRvY3VtZW50KSwgbG9naW4sIGVtYWlsLCByZW1lbWJlciA9IFwiMFwiLCBkYXRldGltZSA9IG1vbWVudCgpLmZvcm1hdChcIllZWVktTU0tREQgSEg6bW06c3NcIiksIG15SVA7XG5cbiAgICBpZiggd2luZG93Lm9wZW5EYXRhYmFzZSApe1xuICAgICAgICB2YXIgZGIgPSBvcGVuRGF0YWJhc2UoJ215X2FjZXNzX2RiJywgJzEuMCcsICdNeSBhY2Nlc3MgZGInLCA1ICogMTAyNCAqIDEwMjQpO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgICBpbXBvcnQoJy4vZmlyc3RfbG9naW4uanMnKS50aGVuKGZ1bmN0aW9uKGZpcnN0X2xvZ2luKSB7IGZpcnN0X2xvZ2luLmRlZmF1bHQoKTsgfSk7XG4gICAgfVxuXG4gICAgdmFyIG9yZGVyID0gXCJBU0NcIjtcblxuXG5cbiAgICAkKCcuaWNvbi1sb2dpbicpLmhpZGUoKVxuICAgICQoJy5uYXYtYnRuJykuZmFkZUluKDUwMClcbiAgICAkKCcubmF2LWRpc2Nvbm5lY3QnKS5mYWRlSW4oNTAwKVxuXG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgICAgRlVOQ1RJT05cbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICBsZXQgZ2V0X2xvY2FsX25ldHdvcmtfaXAgPSAoKT0+e1xuXG4gICAgICAgIHdpbmRvdy5SVENQZWVyQ29ubmVjdGlvbiA9IHdpbmRvdy5SVENQZWVyQ29ubmVjdGlvbiB8fCB3aW5kb3cubW96UlRDUGVlckNvbm5lY3Rpb24gfHwgd2luZG93LndlYmtpdFJUQ1BlZXJDb25uZWN0aW9uO1xuXG4gICAgICAgIHZhciBwYyA9IG5ldyBSVENQZWVyQ29ubmVjdGlvbih7aWNlU2VydmVyczpbXX0pLCBub29wID0gZnVuY3Rpb24oKXt9O1xuXG4gICAgICAgIHBjLmNyZWF0ZURhdGFDaGFubmVsKFwiXCIpO1xuXG4gICAgICAgIHBjLmNyZWF0ZU9mZmVyKHBjLnNldExvY2FsRGVzY3JpcHRpb24uYmluZChwYyksIG5vb3ApO1xuXG4gICAgICAgIHBjLm9uaWNlY2FuZGlkYXRlID0gZnVuY3Rpb24oaWNlKXtcblxuICAgICAgICAgICAgaWYoIWljZSB8fCAhaWNlLmNhbmRpZGF0ZSB8fCAhaWNlLmNhbmRpZGF0ZS5jYW5kaWRhdGUpICByZXR1cm47XG5cbiAgICAgICAgICAgIG15SVAgPSAvKFswLTldezEsM30oXFwuWzAtOV17MSwzfSl7M318W2EtZjAtOV17MSw0fSg6W2EtZjAtOV17MSw0fSl7N30pLy5leGVjKGljZS5jYW5kaWRhdGUuY2FuZGlkYXRlKVsxXTtcblxuICAgICAgICAgICAgcGMub25pY2VjYW5kaWRhdGUgPSBub29wO1xuXG4gICAgICAgICAgICByZXR1cm4gbXlJUDtcblxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGdldF9sb2NhbF9uZXR3b3JrX2lwKCk7XG5cblxuICAgIGxldCBubDJiciA9ICggc3RyLCBpc194aHRtbCApPT4ge1xuICAgICAgICBsZXQgYnJlYWtUYWcgPSAoaXNfeGh0bWwgfHwgdHlwZW9mIGlzX3hodG1sID09PSAndW5kZWZpbmVkJykgPyAnPGJyIC8+JyA6ICc8YnI+JztcbiAgICAgICAgcmV0dXJuIChzdHIgKyAnJykucmVwbGFjZSgvKFtePlxcclxcbl0/KShcXHJcXG58XFxuXFxyfFxccnxcXG4pL2csICckMScgKyBicmVha1RhZyArICckMicpO1xuICAgIH1cblxuICAgIGxldCBpbWFnZUlzTG9hZGVkID0gKCBlICk9PiB7XG4gICAgICAgICQoJyNhZGRfaW1nX2xvYWRlZCcpLmh0bWwoJzxpbWcgc3JjPVwiJytlLnRhcmdldC5yZXN1bHQrJ1wiLz4nKTtcbiAgICB9O1xuXG4gICAgbGV0IHJlc2l6ZV9pbWcgPSAoIGZpbGUgKT0+e1xuICAgIH1cblxuICAgIGxldCBjb3B5RmlsZSA9ICggZnMsIHBhdGgsIGZpbGVzcmMsIGRpcnVwbG9hZCApPT57XG5cbiAgICAgICAgbGV0IGYgICAgICAgPSBwYXRoLmJhc2VuYW1lKGZpbGVzcmMpO1xuICAgICAgICBsZXQgc291cmNlICA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0oZmlsZXNyYyk7XG4gICAgICAgIGxldCBkZXN0ICAgID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5yZXNvbHZlKGRpcnVwbG9hZCwgZikpO1xuXG4gICAgICAgIHNvdXJjZS5waXBlKGRlc3QpO1xuXG4gICAgICAgIHNvdXJjZS5vbignZW5kJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgfSk7XG4gICAgICAgIHNvdXJjZS5vbignZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCB1cGxvYWRfaW1nID0gKCBpbWcsICR0aGlzICk9PntcblxuICAgICAgICBsZXQgaW1nc2VuZCA9IFwiZGVmYXVsdC5wbmdcIjtcblxuICAgICAgICBpZiggaW1nLmxlbmd0aCA+PSAxICl7XG5cbiAgICAgICAgICAgIGlmICgkdGhpcy5maWxlcyAmJiAkdGhpcy5maWxlc1swXSkge1xuXG4gICAgICAgICAgICAgICAgbGV0ICR0aGlzZmlsZSAgICAgICA9ICR0aGlzLmZpbGVzWzBdXG4gICAgICAgICAgICAgICAgbGV0IG9yaWdpbmFsZmlsZSAgICA9ICR0aGlzZmlsZS5wYXRoXG5cbiAgICAgICAgICAgICAgICBsZXQgZmlsZW5hbWUgICAgICAgID0gJHRoaXNmaWxlLm5hbWVcbiAgICAgICAgICAgICAgICBsZXQgZmlsZXR5cGUgICAgICAgID0gJHRoaXNmaWxlLnR5cGVcbiAgICAgICAgICAgICAgICBsZXQgZmlsZXNpemUgICAgICAgID0gJHRoaXNmaWxlLnNpemVcblxuICAgICAgICAgICAgICAgIGlmKCBmaWxldHlwZSA9PSBcImltYWdlL3BuZ1wiIHx8IGZpbGV0eXBlID09IFwiaW1hZ2UvanBlZ1wiICl7XG5cbiAgICAgICAgICAgICAgICAgICAgY29weUZpbGUoZnMsIHBhdGgsIG9yaWdpbmFsZmlsZSwgJy4vdXBsb2FkLycpO1xuXG4gICAgICAgICAgICAgICAgICAgIGltZ3NlbmQgPSBmaWxlbmFtZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBpbWdzZW5kO1xuICAgIH1cblxuXG4gICAgbGV0IGl0ZW1fc29ydGFibGUgPSAoKT0+e1xuXG4gICAgICAgICQoIFwiI3ZpZXdfZGF0YVwiICkuc29ydGFibGUoe1xuICAgICAgICAgICAgaXRlbXM6IFwiLnZpZXctaXRlbVwiLFxuICAgICAgICAgICAgaGFuZGxlOiBcIi5ncmlwXCIsXG4gICAgICAgICAgICBjb25uZWN0V2l0aDogXCIuY2F0ZWdvcnktdmlldy1pdGVtXCIsXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjUsXG4gICAgICAgICAgICBheGlzOiBcInlcIixcbiAgICAgICAgICAgIHJldmVydDogdHJ1ZSxcbiAgICAgICAgICAgIHN0b3A6IGZ1bmN0aW9uKGV2ZW50LCB1aSl7XG5cbiAgICAgICAgICAgICAgICBpZiggd2luZG93Lm9wZW5EYXRhYmFzZSApe1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYiA9IG9wZW5EYXRhYmFzZSgnbXlfYWNlc3NfZGInLCAnMS4wJywgJ015IGFjY2VzcyBkYicsIDUgKiAxMDI0ICogMTAyNCk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZXctaXRlbScpLmVhY2goZnVuY3Rpb24oaSwgdikge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcG9zaXRpb24gPSBpKzE7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICQodikuYXR0cignZGF0YS1wb3NpdGlvbicsIGkpXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcm93aWQgPSAkKHYpLmF0dHIoJ2RhdGEtaWQnKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHYpLmZpbmQoJy5pdGVtLXBvc2l0aW9uJykudGV4dChwb3NpdGlvbilcblxuICAgICAgICAgICAgICAgICAgICAgICAgZGIudHJhbnNhY3Rpb24oZnVuY3Rpb24odHgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgZGF0YXMgU0VUIHBvc2l0aW9uPT8gV0hFUkUgcm93aWQ9PycsIFtpLCByb3dpZF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBsZXQgdGFyZ2V0SUQ7XG5cbiAgICBsZXQgaXRlbV9kcm9wcGFibGUgPSAoKT0+e1xuXG4gICAgICAgICQoIFwiLmNhdGVnb3J5LXZpZXctaXRlbVwiICkuZHJvcHBhYmxlKHtcbiAgICAgICAgICAgIGFjY2VwdDogXCIudmlldy1pdGVtXCIsXG4gICAgICAgICAgICBob3ZlckNsYXNzOiBcImRyb3AtaG92ZXJcIixcbiAgICAgICAgICAgIG92ZXI6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG4gICAgICAgICAgICAgICAgJChldmVudC50YXJnZXQpLmFkZENsYXNzKCdkcm9wcGVkJyk7XG4gICAgICAgICAgICAgICAgdGFyZ2V0SUQgICAgPSAkKGV2ZW50LnRhcmdldCkuYXR0cignZGF0YS1pZCcpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHJvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSApe1xuXG4gICAgICAgICAgICAgICAgdGFyZ2V0SUQgICAgPSAkKGV2ZW50LnRhcmdldCkuYXR0cignZGF0YS1pZCcpXG4gICAgICAgICAgICAgICAgbGV0IGNsb25lICAgICAgID0gJCh1aS5kcmFnZ2FibGVbMF0pLmNsb25lKClcblxuICAgICAgICAgICAgICAgICQodWkuZHJhZ2dhYmxlWzBdKS5hZGRDbGFzcyhcIlRvUmVtb3ZlXCIpXG5cbiAgICAgICAgICAgICAgICBsZXQgaXRlbUlEID0gJCh1aS5kcmFnZ2FibGVbMF0pLmF0dHIoJ2RhdGEtaWQnKVxuXG4gICAgICAgICAgICAgICAgbGV0IGNoZWNrID0gJCgnLmNhdGVnb3J5LXZpZXctaXRlbVtkYXRhLWlkPVwiJyt0YXJnZXRJRCsnXCJdJykuZmluZCgnLnVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyJylcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCBjaGVjay5sZW5ndGggKVxuXG4gICAgICAgICAgICAgICAgaWYoIGNoZWNrLmxlbmd0aCAhPTEgKXtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdlbXB0eScgKVxuICAgICAgICAgICAgICAgICAgICAkKCcuY2F0ZWdvcnktdmlldy1pdGVtW2RhdGEtaWQ9XCInK3RhcmdldElEKydcIl0nKS5hcHBlbmQoY2xvbmUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnTk9UIGVtcHR5JyApXG4gICAgICAgICAgICAgICAgICAgICQoY2xvbmUpLmluc2VydEJlZm9yZSgnLnVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyJylcbiAgICAgICAgICAgICAgICAgICAgJCgnLnVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyJykuaGlkZSgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8kKGNsb25lKS5pbnNlcnRCZWZvcmUoJy51aS1zb3J0YWJsZS1wbGFjZWhvbGRlcicpXG4gICAgICAgICAgICAgICAgLy8kKCcudWktc29ydGFibGUtcGxhY2Vob2xkZXInKS5oaWRlKClcblxuXG4gICAgICAgICAgICAgICAgJChjbG9uZSkucmVtb3ZlQXR0cignc3R5bGUnKVxuXG4gICAgICAgICAgICAgICAgJCgnLlRvUmVtb3ZlJykucmVtb3ZlKClcblxuICAgICAgICAgICAgICAgICQoJy5jYXRlZ29yeS12aWV3LWl0ZW0nKS5yZW1vdmVDbGFzcygnZHJvcHBlZCcpXG5cbiAgICAgICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgY2F0ZWdvcnk9PyBXSEVSRSByb3dpZD0/JywgW3RhcmdldElELCBpdGVtSURdKVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICAvL30sMTAwMClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvdXQ6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgaXRlbUlEID0gJCh1aS5kcmFnZ2FibGVbMF0pLmF0dHIoJ2RhdGEtaWQnKVxuXG4gICAgICAgICAgICAgICAgZGIudHJhbnNhY3Rpb24oZnVuY3Rpb24odHgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnVVBEQVRFIGRhdGFzIFNFVCBjYXRlZ29yeT0/IFdIRVJFIHJvd2lkPT8nLCBbXCIwXCIsIGl0ZW1JRF0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG4gICAgbGV0IHNlYXJjaF9zY3JpcHQgPSAoKT0+e1xuICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgICAgICAgIEZJTFRFUiBTRUFSQ0ggS0VZV09SRFNcbiAgICAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIGpRdWVyeS5leHByWyc6J10uaWNvbnRhaW5zID0gZnVuY3Rpb24oYSwgaSwgbSkge1xuICAgICAgICAgICAgdmFyIHJFeHBzPVtcbiAgICAgICAgICAgICAgICB7cmU6IC9bXFx4QzAtXFx4QzZdL2csIGNoOiBcIkFcIn0sXG4gICAgICAgICAgICAgICAge3JlOiAvW1xceEUwLVxceEU2XS9nLCBjaDogXCJhXCJ9LFxuICAgICAgICAgICAgICAgIHtyZTogL1tcXHhDOC1cXHhDQl0vZywgY2g6IFwiRVwifSxcbiAgICAgICAgICAgICAgICB7cmU6IC9bXFx4RTgtXFx4RUJdL2csIGNoOiBcImVcIn0sXG4gICAgICAgICAgICAgICAge3JlOiAvW1xceENDLVxceENGXS9nLCBjaDogXCJJXCJ9LFxuICAgICAgICAgICAgICAgIHtyZTogL1tcXHhFQy1cXHhFRl0vZywgY2g6IFwiaVwifSxcbiAgICAgICAgICAgICAgICB7cmU6IC9bXFx4RDItXFx4RDZdL2csIGNoOiBcIk9cIn0sXG4gICAgICAgICAgICAgICAge3JlOiAvW1xceEYyLVxceEY2XS9nLCBjaDogXCJvXCJ9LFxuICAgICAgICAgICAgICAgIHtyZTogL1tcXHhEOS1cXHhEQ10vZywgY2g6IFwiVVwifSxcbiAgICAgICAgICAgICAgICB7cmU6IC9bXFx4RjktXFx4RkNdL2csIGNoOiBcInVcIn0sXG4gICAgICAgICAgICAgICAge3JlOiAvW1xceEM3LVxceEU3XS9nLCBjaDogXCJjXCJ9LFxuICAgICAgICAgICAgICAgIHtyZTogL1tcXHhEMV0vZywgY2g6IFwiTlwifSxcbiAgICAgICAgICAgICAgICB7cmU6IC9bXFx4RjFdL2csIGNoOiBcIm5cIn1cbiAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgIHZhciBlbGVtZW50ID0gJChhKS50ZXh0KCk7XG4gICAgICAgICAgICB2YXIgc2VhcmNoID0gbVszXTtcblxuICAgICAgICAgICAgJC5lYWNoKHJFeHBzLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5yZXBsYWNlKHRoaXMucmUsIHRoaXMuY2gpO1xuICAgICAgICAgICAgICAgIHNlYXJjaCA9IHNlYXJjaC5yZXBsYWNlKHRoaXMucmUsIHRoaXMuY2gpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50LnRvVXBwZXJDYXNlKCkuaW5kZXhPZihzZWFyY2gudG9VcHBlckNhc2UoKSkgPj0gMDtcbiAgICAgICAgfTtcbiAgICAgICAgLyogLi5TRUFSQ0guLiAqL1xuICAgICAgICAkZC5vZmYoJ2tleXVwJywgJyNpdGVtX2ZpbHRlcl9rZXl3b3JkcycpLm9uKCdrZXl1cCcsICcjaXRlbV9maWx0ZXJfa2V5d29yZHMnLCBmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICB2YXIgc2VhcmNodmFsdWUgPSAkKHRoaXMpLnZhbCgpXG5cbiAgICAgICAgICAgIGlmKCBzZWFyY2h2YWx1ZS5sZW5ndGggPj0gMiApe1xuICAgICAgICAgICAgICAgICQoJy5rZXl3b3JkX2RhdGEnKS5oaWRlKClcbiAgICAgICAgICAgICAgICAvLyQoJy5tb2RhbC10aXRsZS1jb250ZW50JykuaGlkZSgpXG4gICAgICAgICAgICAgICAgdmFyIGtleXdvcmQgPSAkKCcua2V5d29yZF9kYXRhOmljb250YWlucyhcIicrc2VhcmNodmFsdWUrJ1wiKScpLnNob3coKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAkKCcua2V5d29yZF9kYXRhJykuc2hvdygpXG4gICAgICAgICAgICAgICAgLy8kKCcubW9kYWwtdGl0bGUtY29udGVudCcpLnNob3coKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgICAgICBFTkQgLS0gRklMVEVSIFNFQVJDSCBLRVlXT1JEU1xuICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICB9XG5cbiAgICBsZXQgbG9hZF9jYXRlZ29yeSA9ICggb3JkZXIgPSBcIkFTQ1wiICk9PntcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdTRUxFQ1Qgcm93aWQsICogRlJPTSBjYXRlZ29yeSBPUkRFUiBCWSBwb3NpdGlvbiAnKyBvcmRlciwgW10sIGZ1bmN0aW9uICh0eCwgcmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgaWYoIHJlc3VsdHMucm93cyApe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhICAgICAgICA9IHJlc3VsdHMucm93cztcblxuICAgICAgICAgICAgICAgICAgICAkKGRhdGEpLmVhY2goZnVuY3Rpb24oaSwgdikge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2F0ZWdvcnkgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGRhdGEtcG9zaXRpb249XCInK3YucG9zaXRpb24rJ1wiIGNsYXNzPVwidmlldy1jYXRlZ29yeVwiPicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidGl0bGUtYmxvY2tcIj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgY2xhc3M9XCJjYXRlZ29yeS1oaWRlXCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1kb3duXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImltZy1jYXRlZ29yeVwiPjxpbWcgc3JjPVwiL3VwbG9hZC8nK3YuaW1nKydcIj48L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ0aXRsZS1jYXRlZ29yeVwiPicrdi50aXRsZSsnPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiY2F0ZWdvcnktdmlldy1pdGVtXCI+PC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjdmlld19kYXRhJykucHJlcGVuZChjYXRlZ29yeSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmNhdGVnb3J5LWhpZGVbZGF0YS1pZD1cIicrdi5yb3dpZCsnXCJdJykuY2hpbGRyZW4oJ2knKS5jc3MoJ3RyYW5zZm9ybScsJ3JvdGF0ZSg0NWRlZyknKVxuXG4gICAgICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfSlcbiAgICB9XG5cblxuICAgIGxldCBsb2FkX2RhdGEgPSAoIG9yZGVyID0gXCJBU0NcIiApPT57XG5cbiAgICAgICAgbG9hZF9jYXRlZ29yeSgpXG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICBpZiggd2luZG93Lm9wZW5EYXRhYmFzZSApe1xuXG5cbiAgICAgICAgICAgICAgICB2YXIgZGIgPSBvcGVuRGF0YWJhc2UoJ215X2FjZXNzX2RiJywgJzEuMCcsICdNeSBhY2Nlc3MgZGInLCA1ICogMTAyNCAqIDEwMjQpO1xuXG4gICAgICAgICAgICAgICAgZGIudHJhbnNhY3Rpb24oZnVuY3Rpb24odHgpIHtcblxuICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdTRUxFQ1Qgcm93aWQsICogRlJPTSBkYXRhcyBPUkRFUiBCWSBwb3NpdGlvbiAnKyBvcmRlciwgW10sIGZ1bmN0aW9uICh0eCwgcmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggcmVzdWx0cy5yb3dzICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSAgICAgICAgPSByZXN1bHRzLnJvd3M7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGRhdGEpLmVhY2goZnVuY3Rpb24oaSwgdikge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdGlvbiA9IHYuZGVzY3JpcHRpb25cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggdi5lbmNyeXB0ZWQgPT09IFwiMVwiICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1Qga2V5IEZST00gZW5jcnlwdGlvblwiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzLnJvd3NbMF0gKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQga2V5ID0gcmVzdWx0cy5yb3dzWzBdLmtleTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IENyeXB0b0pTLkFFUy5kZWNyeXB0KHYuZGVzY3JpcHRpb24sIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24udG9TdHJpbmcoQ3J5cHRvSlMuZW5jLlV0ZjgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpdGVtID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGRhdGEtcG9zaXRpb249XCInK3YucG9zaXRpb24rJ1wiIGNsYXNzPVwidmlldy1pdGVtIGtleXdvcmRfZGF0YVwiPicrXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cIm5hdi1pdGVtXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgY2xhc3M9XCJoaWRlLWl0ZW1cIj48aSBjbGFzcz1cImZhIGZhLWFuZ2xlLWRvd25cIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ0aXRsZS1pdGVtXCI+Jyt2LnRpdGxlKyc8L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBkYXRhLWlkPVwiJyt2LnJvd2lkKydcIiBjbGFzcz1cImdyaXAtbm90aWNlXCI+RHJhZyBtZS4uPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgY2xhc3M9XCJncmlwXCI+PGkgY2xhc3M9XCJmYSBmYS1wYXdcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJidG4tbmF2XCI+PGkgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgY2xhc3M9XCJmYSBmYS10cmFzaCB2aWV3X2l0ZW1fZGVsZXRlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYnRuLW5hdlwiPjxpIGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiZmEgZmEtcGVuY2lsIHZpZXdfaXRlbV9lZGl0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicrXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBkYXRhLWlkPVwiJyt2LnJvd2lkKydcIiBjbGFzcz1cIml0ZW0tZGVsZXRlLWNvbmZpcm1hdGlvblwiPicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaXRlbV9jb25maXJtX2RlbGV0ZVwiPkRFTEVURTwvZGl2PjxkaXYgY2xhc3M9XCJpdGVtX2NhbmNlbF9kZWxldGVcIj5DQU5DRUw8L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nK1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgY2xhc3M9XCJkZXNjcmlwdGlvbi1pdGVtXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJpbWdcIj48aW1nIHNyYz1cIi91cGxvYWQvJyt2LmltZysnXCIgYWx0PVwiXCIgLz48L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInRleHRcIj4nK2Rlc2NyaXB0aW9uKyc8L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZGF0ZS1pdGVtXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJpdGVtLWVuY3J5cHRcIj5FbmNyeXB0ZWQuLjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaXRlbS1wb3NpdGlvblwiPicrcG9zaXRpb24rJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZGF0ZS11cFwiPlVwZGF0ZWQgOiAnK3YuZGF0ZXVwZGF0ZSsnPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JytcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2Pic7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIHYuY2F0ZWdvcnkgIT0gXCIwXCIpe1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggJCgnLmNhdGVnb3J5LXZpZXctaXRlbVtkYXRhLWlkPVwiJyt2LmNhdGVnb3J5KydcIl0nKS5pcygnOnZpc2libGUnKSApe1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmNhdGVnb3J5LXZpZXctaXRlbVtkYXRhLWlkPVwiJyt2LmNhdGVnb3J5KydcIl0nKS5hcHBlbmQoaXRlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyN2aWV3X2RhdGEnKS5hcHBlbmQoaXRlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjdmlld19kYXRhJykuYXBwZW5kKGl0ZW0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgZGF0YS1pZD1cIicrdi5yb3dpZCsnXCIgZGF0YS1wb3NpdGlvbj1cIicrdi5wb3NpdGlvbisnXCIgY2xhc3M9XCJ2aWV3LWl0ZW0ga2V5d29yZF9kYXRhXCI+JytcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cIm5hdi1pdGVtXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiaGlkZS1pdGVtXCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1kb3duXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInRpdGxlLWl0ZW1cIj4nK3YudGl0bGUrJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBkYXRhLWlkPVwiJyt2LnJvd2lkKydcIiBjbGFzcz1cImdyaXAtbm90aWNlXCI+RHJhZyBtZS4uPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiZ3JpcFwiPjxpIGNsYXNzPVwiZmEgZmEtcGF3XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImJ0bi1uYXZcIj48aSBkYXRhLWlkPVwiJyt2LnJvd2lkKydcIiBjbGFzcz1cImZhIGZhLXRyYXNoIHZpZXdfaXRlbV9kZWxldGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYnRuLW5hdlwiPjxpIGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiZmEgZmEtcGVuY2lsIHZpZXdfaXRlbV9lZGl0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nK1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGRhdGEtaWQ9XCInK3Yucm93aWQrJ1wiIGNsYXNzPVwiaXRlbS1kZWxldGUtY29uZmlybWF0aW9uXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaXRlbV9jb25maXJtX2RlbGV0ZVwiPkRFTEVURTwvZGl2PjxkaXYgY2xhc3M9XCJpdGVtX2NhbmNlbF9kZWxldGVcIj5DQU5DRUw8L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JytcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBkYXRhLWlkPVwiJyt2LnJvd2lkKydcIiBjbGFzcz1cImRlc2NyaXB0aW9uLWl0ZW1cIj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJpbWdcIj48aW1nIHNyYz1cIi91cGxvYWQvJyt2LmltZysnXCIgYWx0PVwiXCIgLz48L2Rpdj4nK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ0ZXh0XCI+JytkZXNjcmlwdGlvbisnPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZGF0ZS1pdGVtXCI+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaXRlbS1lbmNyeXB0XCI+Tm90IGVuY3J5cHRlZC4uPC9kaXY+JytcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaXRlbS1wb3NpdGlvblwiPicrcG9zaXRpb24rJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImRhdGUtdXBcIj5VcGRhdGVkIDogJyt2LmRhdGV1cGRhdGUrJzwvZGl2PicrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nK1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2Pic7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCB2LmNhdGVnb3J5ICE9IFwiMFwiKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCAkKCcuY2F0ZWdvcnktdmlldy1pdGVtW2RhdGEtaWQ9XCInK3YuY2F0ZWdvcnkrJ1wiXScpLmlzKCc6dmlzaWJsZScpICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmNhdGVnb3J5LXZpZXctaXRlbVtkYXRhLWlkPVwiJyt2LmNhdGVnb3J5KydcIl0nKS5hcHBlbmQoaXRlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjdmlld19kYXRhJykuYXBwZW5kKGl0ZW0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3ZpZXdfZGF0YScpLmFwcGVuZChpdGVtKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBvc2l0aW9uID0gaSsxO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgcG9zaXRpb249PyBXSEVSRSByb3dpZD0/JywgW2ksIHYucm93aWRdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1fc29ydGFibGUoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaF9zY3JpcHQoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsgaXRlbV9kcm9wcGFibGUoKTsgfSwyMDAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgaW1wb3J0KCcuL2ZpcnN0X2xvZ2luLmpzJykudGhlbihmdW5jdGlvbihmaXJzdF9sb2dpbikgeyBmaXJzdF9sb2dpbi5kZWZhdWx0KCk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LDUwMClcbiAgICB9XG5cblxuICAgIGxldCBiYWNrdXBfZGF0YWJhc2UgPSAoIHRhYmxlICk9PiB7XG5cbiAgICAgICAgbGV0IGRhdGEgPSBuZXcgT2JqZWN0KCk7XG5cbiAgICAgICAgZGIudHJhbnNhY3Rpb24oZnVuY3Rpb24odHgpIHtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCAqIEZST00gXCIrdGFibGUsIFtdLCBmdW5jdGlvbiggdHgscmVzdWx0cyApIHtcblxuICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzICl7XG4gICAgICAgICAgICAgICAgICAgICQocmVzdWx0cy5yb3dzKS5lYWNoKGZ1bmN0aW9uKGksdil7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2ldID0gdlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LG51bGwpO1xuICAgIH1cblxuXG4gICAgbGV0IGJhY2t1cCA9ICh0YWJsZSk9PiB7XG5cbiAgICAgICAgdmFyIGRlZiA9IG5ldyAkLkRlZmVycmVkKCk7XG5cbiAgICAgICAgZGIucmVhZFRyYW5zYWN0aW9uKGZ1bmN0aW9uKHR4KSB7XG5cbiAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1QgKiBGUk9NIFwiK3RhYmxlLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXN1bHRzLnJvd3NcblxuICAgICAgICAgICAgICAgIGRlZi5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIG51bGwpO1xuXG4gICAgICAgIHJldHVybiBkZWY7XG4gICAgfVxuXG5cbiAgICBsZXQgZ2V0X3N5bmNocm9uaXNlX3RhYmxlID0gKCk9PntcblxuICAgICAgICBsZXQgdGhla2V5ID0gbmV3ICQuRGVmZXJyZWQoKTtcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCAqIEZST00gc3luY2hyb25pemVcIiwgW10sIGZ1bmN0aW9uKCB0eCxyZXN1bHRzICkge1xuXG4gICAgICAgICAgICAgICAgaWYoIHJlc3VsdHMgKXtcbiAgICAgICAgICAgICAgICAgICAgdGhla2V5LnJlc29sdmUocmVzdWx0cy5yb3dzWzBdLmtleSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgdGhla2V5LnJlc29sdmUoJ251bGwnKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfSwgZnVuY3Rpb24oIGVyciApe1xuICAgICAgICAgICAgY29uc29sZS5sb2coIGVyciApXG4gICAgICAgICAgICB0aGVrZXkucmVzb2x2ZSgnbnVsbCcpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRoZWtleTtcbiAgICB9XG5cbiAgICBsZXQgZ2VuZXJhdGVfa2V5ID0gKCk9PiB7XG4gICAgICB2YXIgdGV4dCA9IFwiXCI7XG4gICAgICB2YXIgcG9zc2libGUgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5XCI7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTA7IGkrKylcbiAgICAgICAgdGV4dCArPSBwb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGUubGVuZ3RoKSk7XG5cbiAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cblxuICAgIGxldCBjcmVhdGVfc3luY2hyb25pc2VfdGFibGUgPSAoKT0+e1xuXG4gICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uICh0eCkge1xuXG4gICAgICAgICAgICBsZXQga2V5ID0gZ2VuZXJhdGVfa2V5KClcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgc3luY2hyb25pemUgKGtleSwgYWN0aXZlLCBkYXRlc3RhcnQgREFURVRJTUUpJyk7XG5cbiAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ0lOU0VSVCBJTlRPIHN5bmNocm9uaXplIChrZXksIGFjdGl2ZSwgZGF0ZXN0YXJ0KSBWQUxVRVMgKFwiJytrZXkrJ1wiLCBcIjFcIiwgXCInK2RhdGV0aW1lKydcIiknKTtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgc3luY2hyb25pemVfYXV0b3JpemVkIChrZXksIGlwLCBtYWNoaW5lLCBkYXRlYWRkIERBVEVUSU1FKScpO1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBzeW5jaHJvbml6ZV9sb2cgKGlwLCBrZXksIGRhdGVsb2cgREFURVRJTUUpJyk7XG5cbiAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBkYXRhcyAodGl0bGUsIGRlc2NyaXB0aW9uIExPTkdURVhULCBpbWcsIHBvc2l0aW9uLCBkYXRlYWRkIERBVEVUSU1FLCBkYXRldXBkYXRlIERBVEVUSU1FLCBlbmNyeXB0ZWQgVkFSQ0hBUiBOT1QgTlVMTCBERUZBVUxUICcwJywgY2F0ZWdvcnkgVkFSQ0hBUiBOT1QgTlVMTCBERUZBVUxUICcwJylcIik7XG5cbiAgICAgICAgfSwgZnVuY3Rpb24oIGVyciApe1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyggZXJyIClcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBsZXQgZGVsZXRlX3N5bmNocm9uaXNlX3RhYmxlID0gKCk9PntcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICAgICAgLy8gRk9SIERFVi4uLlxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIkRST1AgVEFCTEUgc3luY2hyb25pemVcIixbXSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbih0eCxyZXN1bHRzKXsgY29uc29sZS5sb2coXCJTdWNjZXNzZnVsbHkgRHJvcHBlZCBzeW5jaHJvbml6ZVwiKSB9LFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHR4LGVycm9yKXsgY29uc29sZS5sb2coXCJDb3VsZCBub3QgZGVsZXRlIHN5bmNocm9uaXplXCIpIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIEZPUiBERVYuLi5cbiAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJEUk9QIFRBQkxFIHN5bmNocm9uaXplX2F1dG9yaXplZFwiLFtdLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHR4LHJlc3VsdHMpeyBjb25zb2xlLmxvZyhcIlN1Y2Nlc3NmdWxseSBEcm9wcGVkIHN5bmNocm9uaXplX2F1dG9yaXplZFwiKSB9LFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHR4LGVycm9yKXsgY29uc29sZS5sb2coXCJDb3VsZCBub3QgZGVsZXRlIHN5bmNocm9uaXplX2F1dG9yaXplZFwiKSB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyBGT1IgREVWLi4uXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiRFJPUCBUQUJMRSBzeW5jaHJvbml6ZV9sb2dcIixbXSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbih0eCxyZXN1bHRzKXsgY29uc29sZS5sb2coXCJTdWNjZXNzZnVsbHkgRHJvcHBlZCBzeW5jaHJvbml6ZV9sb2dcIikgfSxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbih0eCxlcnJvcil7IGNvbnNvbGUubG9nKFwiQ291bGQgbm90IGRlbGV0ZSBzeW5jaHJvbml6ZV9sb2dcIikgfVxuICAgICAgICAgICAgKTtcblxuXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbGV0IGdldF9zZXJ2ZXJfc3luY19vbl9zdGFydCA9ICgpPT57XG5cbiAgICAgICAgbGV0IGtleSA9IG51bGw7XG5cbiAgICAgICAgJC53aGVuKCBnZXRfc3luY2hyb25pc2VfdGFibGUoKSApLnRoZW4oZnVuY3Rpb24oIHRoaXNrZXkgKXtcblxuICAgICAgICAgICAgaWYoIHRoaXNrZXkgIT0gJ251bGwnICl7XG4gICAgICAgICAgICAgICAga2V5ID0gdGhpc2tleVxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsgaHR0cF9zZXJ2ZXJfc3RhcnQobXlJUCwga2V5KSB9LDE1MDApXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldF9zZXJ2ZXJfc3luY19vbl9zdGFydCgpXG5cblxuICAgIGxldCBzeW5jX2RhdGFfY2hlY2sgPSAoc3RyKT0+e1xuXG4gICAgICAgIHZhciBkZWYgPSBuZXcgJC5EZWZlcnJlZCgpO1xuXG4gICAgICAgIGRiLnJlYWRUcmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiU0VMRUNUICogRlJPTSBkYXRhcyBXSEVSRSB0aXRsZT0/XCIsIFtzdHJdLCBmdW5jdGlvbih0eCxyZXN1bHRzKSB7XG5cbiAgICAgICAgICAgICAgICBpZiggcmVzdWx0cyApe1xuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IHJlc3VsdHMucm93c1xuICAgICAgICAgICAgICAgICAgICAgZGVmLnJlc29sdmUoaXRlbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGRlZiA9IFwibm9fZGF0YVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBmdW5jdGlvbiggZXJyICl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggZXJyIClcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZjtcbiAgICB9XG5cbiAgICBsZXQgc3luY19kYXRhX2luc2VydCA9ICggZGF0YSApPT57XG5cbiAgICAgICAgbGV0IHRpdGxlICAgICAgICAgICA9IGRhdGEudGl0bGVcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uICAgICA9IGRhdGEuZGVzY3JpcHRpb25cbiAgICAgICAgbGV0IGltZyAgICAgICAgICAgICA9IFwiZGVmYXVsdC5wbmdcIlxuICAgICAgICBsZXQgcG9zaXRpb24gICAgICAgID0gXCIwXCJcbiAgICAgICAgbGV0IGRhdGVhZGQgICAgICAgICA9IGRhdGEuZGF0ZWFkZFxuICAgICAgICBsZXQgZGF0ZXVwZGF0ZSAgICAgID0gZGF0YS5kYXRldXBkYXRlXG4gICAgICAgIGxldCBlbmNyeXB0ZWQgICAgICAgPSBkYXRhLmVuY3J5cHRlZFxuXG4gICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uKHR4KSB7XG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZGF0YXMgKHRpdGxlLCBkZXNjcmlwdGlvbiBMT05HVEVYVCwgaW1nLCBwb3NpdGlvbiwgZGF0ZWFkZCBEQVRFVElNRSwgZGF0ZXVwZGF0ZSBEQVRFVElNRSwgZW5jcnlwdGVkIFZBUkNIQVIgTk9UIE5VTEwgREVGQVVMVCAnMCcsIGNhdGVnb3J5IFZBUkNIQVIgTk9UIE5VTEwgREVGQVVMVCAnMCcpXCIpO1xuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnSU5TRVJUIElOVE8gZGF0YXMgKHRpdGxlLCBkZXNjcmlwdGlvbiwgaW1nLCBwb3NpdGlvbiwgZGF0ZWFkZCwgZGF0ZXVwZGF0ZSwgZW5jcnlwdGVkLCBjYXRlZ29yeSkgVkFMVUVTIChcIicrdGl0bGUrJ1wiLCBcIicrZGVzY3JpcHRpb24rJ1wiLCBcIicraW1nKydcIiwgXCInK3Bvc2l0aW9uKydcIiwgXCInK2RhdGVhZGQrJ1wiLCBcIicrZGF0ZXVwZGF0ZSsnXCIsIFwiJytlbmNyeXB0ZWQrJ1wiLCBcIjBcIiknKTtcbiAgICAgICAgfSlcblxuICAgICAgICAvKlxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnSU5TRVJUIElOVE8gZGF0YXMgKHRpdGxlLCBkZXNjcmlwdGlvbiwgaW1nLCBwb3NpdGlvbiwgZGF0ZWFkZCwgZGF0ZXVwZGF0ZSwgZW5jcnlwdGVkKSBWQUxVRVMgKFwiJyt0aXRsZSsnXCIsIFwiJytkZXNjcmlwdGlvbisnXCIsIFwiJytpbWcrJ1wiLCBcIicrcG9zaXRpb24rJ1wiLCBcIicrZGF0ZWFkZCsnXCIsIFwiJytkYXRldXBkYXRlKydcIiwgXCInK2VuY3J5cHRlZCsnXCIpJyk7XG4gICAgICAgIH0pXG4gICAgICAgICovXG4gICAgfVxuXG4gICAgbGV0IGdldF9lbmNyeXB0aW9uID0oKT0+e1xuXG4gICAgICAgIGxldCBkYXRhID0gbmV3ICQuRGVmZXJyZWQoKTtcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZW5jcnlwdGlvbiAoa2V5LCBzdGF0ZSBWQVJDSEFSIE5PVCBOVUxMIERFRkFVTFQgJzAnKVwiKTtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCByb3dpZCwgKiBGUk9NIGVuY3J5cHRpb25cIiwgW10sIGZ1bmN0aW9uKHR4LHJlc3VsdHMpIHtcblxuICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzLnJvd3NbMF0pe1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnJlc29sdmUocmVzdWx0cy5yb3dzWzBdKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnJlc29sdmUoJ251bGwnKVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9LGZ1bmN0aW9uKCBlcnIgKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgICAgIGRhdGEucmVzb2x2ZSgnbnVsbCcpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuXG4gICAgbGV0IGFkZF9rZXlfZW5jcnlwdGlvbiA9IChzdHIpPT57XG5cbiAgICAgICAgZGIudHJhbnNhY3Rpb24oZnVuY3Rpb24odHgpIHtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCAqIEZST00gZW5jcnlwdGlvblwiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgaWYoIHJlc3VsdHMucm93c1swXSApe1xuICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgZW5jcnlwdGlvbiBTRVQga2V5PT8gd2hlcmUgcm93aWQ9PycsIFtzdHIsIDFdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcblxuICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdJTlNFUlQgSU5UTyBlbmNyeXB0aW9uIChrZXkpIFZBTFVFUyAoXCInK3N0cisnXCIpJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBsZXQgZW5jcnlwdGlvbl9zdGF0ZV92YWx1ZSA9ICh2YWx1ZSk9PntcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICBpZiggdmFsdWUgPT09IFwiMVwiKXtcbiAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgZW5jcnlwdGlvbiBTRVQgc3RhdGU9PyB3aGVyZSByb3dpZD0/JywgW1wiMVwiLCAxXSk7XG5cbiAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiU0VMRUNUIGtleSBGUk9NIGVuY3J5cHRpb25cIiwgW10sIGZ1bmN0aW9uKHR4LHJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoIHJlc3VsdHMucm93c1swXSApe1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGtleSA9IHJlc3VsdHMucm93c1swXS5rZXk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNyeXB0X2RhdGEoa2V5KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYoIHZhbHVlID09PSBcIjBcIiApe1xuICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBlbmNyeXB0aW9uIFNFVCBzdGF0ZT0/IHdoZXJlIHJvd2lkPT8nLCBbXCIwXCIsIDFdKTtcblxuICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1Qga2V5IEZST00gZW5jcnlwdGlvblwiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiggcmVzdWx0cy5yb3dzWzBdICl7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQga2V5ID0gcmVzdWx0cy5yb3dzWzBdLmtleTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlY3J5cHRfZGF0YShrZXkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGxldCBjcnlwdF9kYXRhID0gKGtleSk9PntcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiU0VMRUNUIHJvd2lkLCAqIEZST00gZGF0YXNcIiwgW10sIGZ1bmN0aW9uKHR4LHJlc3VsdHMpIHtcblxuICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzICl7XG5cbiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHJlc3VsdHMucm93cywgZnVuY3Rpb24oayx2KXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRlc2NyaXB0aW9uX2VuY3J5cHQgPSBDcnlwdG9KUy5BRVMuZW5jcnlwdCh2LmRlc2NyaXB0aW9uLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uX2VuY3J5cHQgPSBkZXNjcmlwdGlvbl9lbmNyeXB0LnRvU3RyaW5nKClcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlkID0gdi5yb3dpZFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggdi5lbmNyeXB0ZWQgPT09IFwiMFwiKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgZGF0YXMgU0VUIGRlc2NyaXB0aW9uPT8gd2hlcmUgcm93aWQ9PycsIFtkZXNjcmlwdGlvbl9lbmNyeXB0LCBpZF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgZW5jcnlwdGVkPT8gd2hlcmUgcm93aWQ9PycsIFtcIjFcIiwgaWRdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGxldCBkZWNyeXB0X2RhdGEgPSAoa2V5KT0+e1xuXG4gICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uKHR4KSB7XG5cbiAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1Qgcm93aWQsICogRlJPTSBkYXRhc1wiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgaWYoIHJlc3VsdHMgKXtcblxuICAgICAgICAgICAgICAgICAgICAkLmVhY2gocmVzdWx0cy5yb3dzLCBmdW5jdGlvbihrLHYpe1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVzY3JpcHRpb25fZGVjcnlwdCA9IENyeXB0b0pTLkFFUy5kZWNyeXB0KHYuZGVzY3JpcHRpb24sIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25fZGVjcnlwdCA9IGRlc2NyaXB0aW9uX2RlY3J5cHQudG9TdHJpbmcoQ3J5cHRvSlMuZW5jLlV0ZjgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaWQgPSB2LnJvd2lkXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCB2LmVuY3J5cHRlZCA9PT0gXCIxXCIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgZGVzY3JpcHRpb249PyB3aGVyZSByb3dpZD0/JywgW2Rlc2NyaXB0aW9uX2RlY3J5cHQsIGlkXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnVVBEQVRFIGRhdGFzIFNFVCBlbmNyeXB0ZWQ9PyB3aGVyZSByb3dpZD0/JywgW1wiMFwiLCBpZF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBsZXQgYmFja3VwX2Rvd25sb2FkID0gKCk9PntcblxuICAgICAgICAvL0dFVCBCQUNLVVAgREFUQSBCQVNFXG4gICAgICAgIGxldCBmaWxlID0gcGF0aC5iYXNlbmFtZSgnL2RhdGEnKStcIi9kYXRhcy5qc29uXCI7XG4gICAgICAgIGZzLmV4aXN0cyhmaWxlLCAoZXhpc3RzKSA9PiB7XG5cbiAgICAgICAgICAgIGlmKCBleGlzdHMgKXtcblxuICAgICAgICAgICAgICAgICQoJyNyZXN1bHRfZXhwb3J0X2RhdGFiYXNlX2ZpbGUnKS5zaG93KClcblxuICAgICAgICAgICAgICAgIGZzLnJlYWRGaWxlKGZpbGUsICd1dGY4JywgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuXG4gICAgICAgICAgICAgICAgICAgIGlmKCFlcnIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRvd25sb2FkID0gXCJ0ZXh0L2pzb247Y2hhcnNldD11dGYtOCxcIiArIGVuY29kZVVSSUNvbXBvbmVudChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJzxhIGhyZWY9XCJkYXRhOicgKyBkb3dubG9hZCArICdcIiBkb3dubG9hZD1cImRhdGFzLmpzb25cIj5Eb3dubG9hZCBKU09OIGZpbGU8L2E+JykuYXBwZW5kVG8oJyNyZXN1bHRfZXhwb3J0X2RhdGFiYXNlX2ZpbGUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgICoqRk9SIERFVioqXG4gICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIGxldCBhZGRfY29sdW1uID0gKCk9PntcblxuXG4gICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCBlbmNyeXB0ZWQgRlJPTSBkYXRhc1wiLCBbXSwgZnVuY3Rpb24oIHR4LHJlc3VsdHMgKSB7fSlcblxuICAgICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZXJyIClcbiAgICAgICAgICAgICAgICBpZiggZXJyLm1lc3NhZ2UgPT09IFwiY291bGQgbm90IHByZXBhcmUgc3RhdGVtZW50ICgxIG5vIHN1Y2ggY29sdW1uOiBlbmNyeXB0ZWQpXCIpe1xuICAgICAgICAgICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIkFMVEVSIFRBQkxFIGRhdGFzIEFERCBlbmNyeXB0ZWQgVkFSQ0hBUiBOT1QgTlVMTCBERUZBVUxUICcwJyBcIilcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG5cbiAgICAgICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uKHR4KSB7XG5cbiAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKFwiU0VMRUNUIGNhdGVnb3J5IEZST00gZGF0YXNcIiwgW10sIGZ1bmN0aW9uKCB0eCxyZXN1bHRzICkge30pXG5cbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coIGVyciApXG4gICAgICAgICAgICAgICAgaWYoIGVyci5tZXNzYWdlID09PSBcImNvdWxkIG5vdCBwcmVwYXJlIHN0YXRlbWVudCAoMSBubyBzdWNoIGNvbHVtbjogY2F0ZWdvcnkpXCIpe1xuICAgICAgICAgICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIkFMVEVSIFRBQkxFIGRhdGFzIEFERCBjYXRlZ29yeSBWQVJDSEFSIE5PVCBOVUxMIERFRkFVTFQgJzAnIFwiKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG5cblxuXG4gICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCBzdGF0ZSBGUk9NIGVuY3J5cHRpb25cIiwgW10sIGZ1bmN0aW9uKCB0eCxyZXN1bHRzICkge30pXG5cbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coIGVyciApXG4gICAgICAgICAgICAgICAgaWYoIGVyci5tZXNzYWdlID09PSBcImNvdWxkIG5vdCBwcmVwYXJlIHN0YXRlbWVudCAoMSBubyBzdWNoIGNvbHVtbjogc3RhdGUpXCIpe1xuICAgICAgICAgICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIkFMVEVSIFRBQkxFIGVuY3J5cHRpb24gQUREIHN0YXRlIFZBUkNIQVIgTk9UIE5VTEwgREVGQVVMVCAnMCcgXCIpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG4gICAgICAgIGFkZF9jb2x1bW4oKVxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgICBFTkQgKipGT1IgREVWKipcbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgIFNUQVJUXG4gICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgICQoJyNhcHBfbmF2Jykuc2hvdygpXG5cbiAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICB0eC5leGVjdXRlU3FsKCdTRUxFQ1QgKiBGUk9NIHVzZXInLCBbXSwgZnVuY3Rpb24gKHR4LCByZXN1bHRzKSB7XG5cbiAgICAgICAgICAgIGlmKCByZXN1bHRzLnJvd3NbMF0gKXtcbiAgICAgICAgICAgICAgICBsZXQgdXNlciAgICAgICAgPSByZXN1bHRzLnJvd3NbMF07XG5cbiAgICAgICAgICAgICAgICBsb2dpbiAgICAgICA9IHVzZXIubG9naW47XG4gICAgICAgICAgICAgICAgZW1haWwgICAgICAgPSB1c2VyLmVtYWlsO1xuICAgICAgICAgICAgICAgIHJlbWVtYmVyICAgID0gdXNlci5yZW1lbWJlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyAqKiBPTiBTVEFSVCBMT0FEIFZJRVcuSFRNTCAqKlxuICAgICQucG9zdCgnL3RlbXBsYXRlcy92aWV3Lmh0bWwnLCBmdW5jdGlvbiggZGF0YSApe1xuXG4gICAgICAgICQoJyN0ZW1wbGF0ZV9sb2FkJykuaHRtbCggZGF0YSApO1xuXG4gICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG4gICAgfSlcblxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgIE5BVklHQVRJT05cbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJyNyZXR1cm5faG9tZScpLm9uKCdjbGljaycsICcjcmV0dXJuX2hvbWUnLCBmdW5jdGlvbigpe1xuICAgICAgICAkLnBvc3QoJy90ZW1wbGF0ZXMvdmlldy5odG1sJywgZnVuY3Rpb24oIGRhdGEgKXtcblxuICAgICAgICAgICAgJCgnI3RlbXBsYXRlX2xvYWQnKS5odG1sKCBkYXRhICk7XG5cbiAgICAgICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG5cbiAgICAgICAgfSk7XG4gICAgfSlcblxuICAgICRkLm9mZignY2xpY2snLCAnI3Nob3dfcGFyYW1zJykub24oJ2NsaWNrJywgJyNzaG93X3BhcmFtcycsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgJC5wb3N0KCcvdGVtcGxhdGVzL3BhcmFtcy5odG1sJywgZnVuY3Rpb24oIGRhdGEgKXtcblxuICAgICAgICAgICAgJCgnI3RlbXBsYXRlX2xvYWQnKS5odG1sKCBkYXRhICk7XG5cbiAgICAgICAgICAgIGxldCBrZXkgPSBudWxsO1xuXG4gICAgICAgICAgICAvL0dFVCBTWU5DSFJPTklaRSAmIEVOQ1JZUFRJT04uLlxuICAgICAgICAgICAgJC53aGVuKCBnZXRfc3luY2hyb25pc2VfdGFibGUoKSwgZ2V0X2VuY3J5cHRpb24oKSApLnRoZW4oZnVuY3Rpb24oIGRhdGEsIGVuY3J5cHRpb24gKXtcblxuICAgICAgICAgICAgICAgIC8vIFNZTkNIUk9OSVNFIERBVEFcbiAgICAgICAgICAgICAgICBpZiggZGF0YSAhPSAnbnVsbCcgKXtcbiAgICAgICAgICAgICAgICAgICAga2V5ID0gZGF0YTtcblxuICAgICAgICAgICAgICAgICAgICAkKCcjb3Blbl9icm93c2VyX2xvY2FsaG9zdCcpLmZhZGVJbigzMDApXG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI2xvYWRfbGlua19mb3Jfc3luYycpLmh0bWwoJ2h0dHA6Ly8nK215SVArJzozMDAwLycra2V5KVxuXG4gICAgICAgICAgICAgICAgICAgICQoJyNhX2xpbmtfc2hhcmVfc3luYycpLmF0dHIoJ2hyZWYnLCAnbWFpbHRvOj9zdWJqZWN0PVRoZSBsaW5rIGZvciBzaGFyZSBteSBhY2Nlc3MuIFJlbW92ZSB0aGlzIGVtYWlsIGFmdGVyIHN5bmMgYXBwLi4uJiZjYz0nK2VtYWlsKycmYm9keT1odHRwOi8vJytteUlQKyc6MzAwMC8nK2tleSlcblxuICAgICAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwiaHR0cF9zZXJ2ZXJcIl0nKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0X2RhdGFfc3RhdGUnKS5zaG93KClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0X2RhdGFfc3RhdGUnKS5oaWRlKClcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBFTkNSWVBUSU9OIERBVEFcbiAgICAgICAgICAgICAgICBpZiggZW5jcnlwdGlvbiAhPSAnbnVsbCcgfHwgZW5jcnlwdGlvbiAhPSBudWxsICl7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0aW9uJykudmFsKGVuY3J5cHRpb24ua2V5KVxuICAgICAgICAgICAgICAgICAgICAkKCcjcGFyYW1zX2VuY3J5cHRfZGF0YV9zdGF0ZScpLnNob3coKVxuXG4gICAgICAgICAgICAgICAgICAgIGlmKCBlbmNyeXB0aW9uLnN0YXRlID09PSBcIjFcIiApe1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXQjZW5jcnlwdF9kYXRhJykucHJvcCgnY2hlY2tlZCcsIHRydWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcGFyYW1zX2VuY3J5cHRpb24nKS5wcm9wKCdyZWFkb25seScsIHRydWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcGFyYW1zX2VuY3J5cHRpb24nKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2lucHV0I2VuY3J5cHRfZGF0YScpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNwYXJhbXNfZW5jcnlwdGlvbicpLnByb3AoJ3JlYWRvbmx5JywgZmFsc2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcGFyYW1zX2VuY3J5cHRpb24nKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gR0VUIFJFTUVNQkVSXG4gICAgICAgICAgICBpZihyZW1lbWJlciA9PT0gXCIxXCIgKXtcbiAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwicGFyYW1zX3JlbWVtYmVyXCJdJykucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwicGFyYW1zX3JlbWVtYmVyXCJdJykucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYmFja3VwX2Rvd25sb2FkKCk7XG5cbiAgICAgICAgICAgICQoJyNnZXRfYXBpX2Zvcl9zeW5jaHJvbml6ZV9yZXN1bHRfaHRtbCcpLnJlbW92ZSgpXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgJGQub2ZmKCdjbGljaycsICcjYWRkX2RhdGEnKS5vbignY2xpY2snLCAnI2FkZF9kYXRhJywgZnVuY3Rpb24oKXtcbiAgICAgICAgJC5wb3N0KCcvdGVtcGxhdGVzL2FkZC5odG1sJywgZnVuY3Rpb24oIGRhdGEgKXtcbiAgICAgICAgICAgICQoJyN0ZW1wbGF0ZV9sb2FkJykuaHRtbCggZGF0YSApO1xuICAgICAgICB9KTtcbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcjYWRkX2NhdGVnb3J5Jykub24oJ2NsaWNrJywgJyNhZGRfY2F0ZWdvcnknLCBmdW5jdGlvbigpe1xuICAgICAgICAkLnBvc3QoJy90ZW1wbGF0ZXMvYWRkX2NhdGVnb3J5Lmh0bWwnLCBmdW5jdGlvbiggZGF0YSApe1xuICAgICAgICAgICAgJCgnI3RlbXBsYXRlX2xvYWQnKS5odG1sKCBkYXRhICk7XG4gICAgICAgIH0pO1xuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJyNhcHBfcmV0dXJuJykub24oJ2NsaWNrJywgJyNhcHBfcmV0dXJuJywgZnVuY3Rpb24oKXtcbiAgICAgICAgJC5wb3N0KCcvdGVtcGxhdGVzL3ZpZXcuaHRtbCcsIGZ1bmN0aW9uKCBkYXRhICl7XG4gICAgICAgICAgICAkKCcjdGVtcGxhdGVfbG9hZCcpLmh0bWwoIGRhdGEgKTtcbiAgICAgICAgICAgIGFkZF9uYXZpZ2F0aW9uKCk7XG4gICAgICAgIH0pO1xuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJyNhcHBfZGlzY29ubmVjdCcpLm9uKCdjbGljaycsICcjYXBwX2Rpc2Nvbm5lY3QnLCBmdW5jdGlvbigpe1xuXG4gICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uICh0eCkge1xuXG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdTRUxFQ1QgKiBGUk9NIHVzZXInLCBbXSwgZnVuY3Rpb24gKHR4LCByZXN1bHRzKSB7XG5cbiAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgdXNlciBTRVQgcmVtZW1iZXI9PyB3aGVyZSByb3dpZD0/JywgW1wiMFwiLCAxXSwgZnVuY3Rpb24odHgpe1xuICAgICAgICAgICAgICAgICAgICBpbXBvcnQoJy4vbG9naW4uanMnKS50aGVuKGZ1bmN0aW9uKGxvZ2luKSB7IGxvZ2luLmRlZmF1bHQoKTsgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgICAgUEFSQU1TXG4gICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgJGQub2ZmKCdjaGFuZ2UnLCAnaW5wdXRbbmFtZT1cImh0dHBfc2VydmVyXCJdJykub24oJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiaHR0cF9zZXJ2ZXJcIl0nLCBmdW5jdGlvbigpe1xuXG4gICAgICAgIGxldCB2YWwgPSAkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKVxuXG4gICAgICAgIGxldCBrZXkgPSBudWxsO1xuXG4gICAgICAgIGlmKCB2YWwgPT0gdHJ1ZSApe1xuXG4gICAgICAgICAgICAkLndoZW4oIGdldF9zeW5jaHJvbmlzZV90YWJsZSgpICkudGhlbihmdW5jdGlvbiggdGhpc2tleSApe1xuXG4gICAgICAgICAgICAgICAgaWYoIHRoaXNrZXkgIT0gJ251bGwnICl7XG4gICAgICAgICAgICAgICAgICAgIGtleSA9IHRoaXNrZXlcbiAgICAgICAgICAgICAgICAgICAgJCgnI29wZW5fYnJvd3Nlcl9sb2NhbGhvc3QnKS5mYWRlSW4oMzAwKVxuICAgICAgICAgICAgICAgICAgICAkKCcjbG9hZF9saW5rX2Zvcl9zeW5jJykuaHRtbCgnaHR0cDovLycrbXlJUCsnOjMwMDAvJytrZXkpXG4gICAgICAgICAgICAgICAgICAgICQoJyNhX2xpbmtfc2hhcmVfc3luYycpLmF0dHIoJ2hyZWYnLCAnbWFpbHRvOj9zdWJqZWN0PVRoZSBsaW5rIGZvciBzaGFyZSBteSBhY2Nlc3MgYXBwJiZjYz0nK2VtYWlsKycmYm9keT1odHRwOi8vJytteUlQKyc6MzAwMC8nK2tleSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcblxuICAgICAgICAgICAgICAgICAgICBjcmVhdGVfc3luY2hyb25pc2VfdGFibGUoKVxuXG4gICAgICAgICAgICAgICAgICAgICQud2hlbiggZ2V0X3N5bmNocm9uaXNlX3RhYmxlKCkgKS50aGVuKGZ1bmN0aW9uKCBuZXdrZXkgKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSA9IG5ld2tleVxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI29wZW5fYnJvd3Nlcl9sb2NhbGhvc3QnKS5mYWRlSW4oMzAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2xvYWRfbGlua19mb3Jfc3luYycpLmh0bWwoJ2h0dHA6Ly8nK215SVArJzozMDAwLycra2V5KVxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FfbGlua19zaGFyZV9zeW5jJykuYXR0cignaHJlZicsICdtYWlsdG86P3N1YmplY3Q9VGhlIGxpbmsgZm9yIHNoYXJlIG15IGFjY2VzcyBhcHAmJmNjPScrZW1haWwrJyZib2R5PWh0dHA6Ly8nK215SVArJzozMDAwLycra2V5KVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB3aW5fcmVsb2FkKClcbiAgICAgICAgICAgIH0sMTUwMCk7XG4gICAgICAgIH1cblxuICAgICAgICBlbHNle1xuXG4gICAgICAgICAgICAkKCcjb3Blbl9icm93c2VyX2xvY2FsaG9zdCcpLmZhZGVPdXQoMzAwKVxuICAgICAgICAgICAgJCgnI3N5bmNfa2V5X3Nob3cnKS5yZW1vdmUoKVxuXG4gICAgICAgICAgICBkZWxldGVfc3luY2hyb25pc2VfdGFibGUoKVxuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgd2luX3JlbG9hZCgpXG4gICAgICAgICAgICB9LDEwMDApXG4gICAgICAgIH1cblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwicGFyYW1zX3JlbWVtYmVyXCJdJykub24oJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwicGFyYW1zX3JlbWVtYmVyXCJdJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgdmFsID0gJCh0aGlzKS5wcm9wKCdjaGVja2VkJylcblxuICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnU0VMRUNUICogRlJPTSB1c2VyJywgW10sIGZ1bmN0aW9uICh0eCwgcmVzdWx0cykge1xuXG4gICAgICAgICAgICAgICAgaWYoIHZhbCA9PSB0cnVlICl7XG4gICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSB1c2VyIFNFVCByZW1lbWJlcj0/IHdoZXJlIHJvd2lkPT8nLCBbXCIxXCIsIDFdKTtcbiAgICAgICAgICAgICAgICAgICAgcmVtZW1iZXIgICAgPSBcIjFcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnVVBEQVRFIHVzZXIgU0VUIHJlbWVtYmVyPT8gd2hlcmUgcm93aWQ9PycsIFtcIjBcIiwgMV0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHJlbWVtYmVyICAgID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9KTtcblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiZXhwb3J0X2RhdGFiYXNlXCJdJykub24oJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiZXhwb3J0X2RhdGFiYXNlXCJdJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgdmFsID0gJCh0aGlzKS5wcm9wKCdjaGVja2VkJylcblxuICAgICAgICBpZiggdmFsID09IHRydWUgKXtcblxuICAgICAgICAgICAgLy9sZXQgZGF0YXNkYXRhICAgPSBiYWNrdXBfZGF0YWJhc2UoXCJkYXRhc1wiKTtcblxuICAgICAgICAgICAgJC53aGVuKFxuICAgICAgICAgICAgICAgIGJhY2t1cChcImRhdGFzXCIpLFxuICAgICAgICAgICAgICAgIGJhY2t1cChcInVzZXJcIilcbiAgICAgICAgICAgICkudGhlbihmdW5jdGlvbiggZGF0YXMsIHVzZXIgKXtcblxuICAgICAgICAgICAgICAgIGlmKCBkYXRhcy5sZW5ndGggPj0gMSApe1xuXG4gICAgICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJleHBvcnRfZGF0YWJhc2VcIl0nKS5oaWRlKClcbiAgICAgICAgICAgICAgICAgICAgJCgnI3Jlc3VsdF9leHBvcnRfZGF0YWJhc2UnKS5mYWRlSW4oMzAwKS5hcHBlbmQoJzxzbWFsbD5EYXRhIHN1Y2Nlc2Z1bGx5IGV4cG9ydGVkPC9zbWFsbD4nKVxuXG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhZGF0YXMgPSB7ZGF0YXM6ZGF0YXN9O1xuICAgICAgICAgICAgICAgICAgICBsZXQgc2VyaWFsaXplZERhdGFEYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YWRhdGFzKTtcblxuICAgICAgICAgICAgICAgICAgICBmcy53cml0ZUZpbGUoXCJkYXRhL2RhdGFzLmpzb25cIiwgc2VyaWFsaXplZERhdGFEYXRhLCAoZXJyKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImV4cG9ydF9kYXRhYmFzZVwiXScpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoICQoJyNyZXN1bHRfZXhwb3J0X2RhdGFiYXNlX2ZpbGUnKS5pcygnOmhpZGRlbicpICl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja3VwX2Rvd25sb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgaWYoIHVzZXIubGVuZ3RoID49IDEgKXtcbiAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImV4cG9ydF9kYXRhYmFzZVwiXScpLmhpZGUoKVxuICAgICAgICAgICAgICAgICAgICAkKCcjcmVzdWx0X2V4cG9ydF9kYXRhYmFzZScpLmZhZGVJbigzMDApLmFwcGVuZCgnPHNtYWxsPlVzZXIgc3VjY2VzZnVsbHkgZXhwb3J0ZWQ8L3NtYWxsPicpXG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGF1c2VyID0ge3VzZXI6dXNlcn07XG4gICAgICAgICAgICAgICAgICAgIGxldCBzZXJpYWxpemVkRGF0YVVzZXIgPSBKU09OLnN0cmluZ2lmeShkYXRhdXNlcik7XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQoJyNyZXN1bHRfZXhwb3J0X2RhdGFiYXNlJykuZmFkZU91dCgzMDApLmh0bWwoJycpXG4gICAgICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJleHBvcnRfZGF0YWJhc2VcIl0nKS5zaG93KDMwMClcbiAgICAgICAgICAgICAgICB9LDMwMDApXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcjZ2V0X2FwaV9mb3Jfc3luY2hyb25pemUnKS5vbignY2xpY2snLCAnI2dldF9hcGlfZm9yX3N5bmNocm9uaXplJywgZnVuY3Rpb24oIGUgKXtcblxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBsZXQgYXBpbGluayA9ICQoJyNhcGlfZm9yX3N5bmNocm9uaXplJykudmFsKClcblxuICAgICAgICAkKCcjZ2V0X2FwaV9mb3Jfc3luY2hyb25pemVfcmVzdWx0X2h0bWwnKS5yZW1vdmUoKVxuXG4gICAgICAgIGlmKCBhcGlsaW5rLmxlbmd0aCA+PSAyNSApe1xuXG4gICAgICAgICAgICAkLmdldEpTT04oIGFwaWxpbmssIGZ1bmN0aW9uKCBkYXRhICl7XG5cbiAgICAgICAgICAgICAgICBpZiggZGF0YSApe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBpdGVtcyA9IGRhdGEuZGF0YXNcblxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goaXRlbXMsIGZ1bmN0aW9uKGssIHYpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRpdGxlID0gdi50aXRsZVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAkLndoZW4oIHN5bmNfZGF0YV9jaGVjayggdGl0bGUgKSApLnRoZW4oZnVuY3Rpb24oIGl0ZW1zICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggaXRlbXMubGVuZ3RoIDw9IDAgKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3luY19kYXRhX2luc2VydCh2KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZ2V0X2FwaV9mb3Jfc3luY2hyb25pemVfcmVzdWx0JykuaHRtbCgnPGRpdiBpZD1cImdldF9hcGlfZm9yX3N5bmNocm9uaXplX3Jlc3VsdF9odG1sXCI+Jyt0aXRsZSsnIGluc2VyZWQuLjwvZGl2PicpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNnZXRfYXBpX2Zvcl9zeW5jaHJvbml6ZV9yZXN1bHQnKS5odG1sKCc8ZGl2IGlkPVwiZ2V0X2FwaV9mb3Jfc3luY2hyb25pemVfcmVzdWx0X2h0bWxcIj5BbGwgaXRlbXMgYXJlIGFsbHJlYWR5IG9uIGRhdGFiYXNlLi48L2Rpdj4nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBlbHNlIGlmKCBhcGlsaW5rLmxlbmd0aCA9PT0gMCApe1xuICAgICAgICAgICAgJCgnI2FwaV9mb3Jfc3luY2hyb25pemUnKS52YWwoXCJFbnRlciBsaW5rIGluIGZpZWxkLi5cIilcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAkKCcjYXBpX2Zvcl9zeW5jaHJvbml6ZScpLnZhbChhcGlsaW5rKTsgfSwyMDAwKVxuICAgICAgICB9XG5cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICQoJyNhcGlfZm9yX3N5bmNocm9uaXplJykudmFsKFwiTGluayBpcyBub3QgdmFsaWQuLi5cIilcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAkKCcjYXBpX2Zvcl9zeW5jaHJvbml6ZScpLnZhbChhcGlsaW5rKTsgfSwyMDAwKVxuICAgICAgICB9XG4gICAgfSlcblxuXG4gICAgJGQub2ZmKCdjbGljaycsICcjc2VuZF9wYXJhbXNfZW5jcnlwdGlvbicpLm9uKCdjbGljaycsICcjc2VuZF9wYXJhbXNfZW5jcnlwdGlvbicsIGZ1bmN0aW9uKCBlICl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgICAgIGxldCB2YWx1ZSA9ICQoJyNwYXJhbXNfZW5jcnlwdGlvbicpLnZhbCgpXG5cbiAgICAgICAgaWYoIHZhbHVlLmxlbmd0aCA+PSA4ICl7XG4gICAgICAgICAgICBhZGRfa2V5X2VuY3J5cHRpb24oIHZhbHVlIClcblxuICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0aW9uX3Jlc3VsdCcpLmh0bWwoJzxkaXYgaWQ9XCJwYXJhbXNfZW5jcnlwdGlvbl9yZXN1bHRfaHRtbFwiPkFkZGVkICE8L2Rpdj4nKVxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAkKCcjcGFyYW1zX2VuY3J5cHRpb25fcmVzdWx0X2h0bWwnKS5yZW1vdmUoKSB9LDE1MDApXG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICQoJyNwYXJhbXNfZW5jcnlwdGlvbicpLnZhbCgnOCBwcmludCBtaW5pbXVtIHJlcXVpcmVkLi4nKVxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAkKCcjcGFyYW1zX2VuY3J5cHRpb24nKS52YWwodmFsdWUpOyB9LDIwMDApXG4gICAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgJGQub2ZmKCdjaGFuZ2UnLCAnaW5wdXRbbmFtZT1cImVuY3J5cHRfZGF0YVwiXScpLm9uKCdjaGFuZ2UnLCAnaW5wdXRbbmFtZT1cImVuY3J5cHRfZGF0YVwiXScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgbGV0IHZhbCA9ICQodGhpcykucHJvcCgnY2hlY2tlZCcpXG5cbiAgICAgICAgaWYoIHZhbCA9PSB0cnVlICl7XG4gICAgICAgICAgICBlbmNyeXB0aW9uX3N0YXRlX3ZhbHVlKFwiMVwiKVxuICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0aW9uJykucHJvcCgncmVhZG9ubHknLCB0cnVlKVxuICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0aW9uJykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKVxuXG4gICAgICAgICAgICAkKCcjZW5jcnlwdF9kYXRhX3Jlc3VsdCcpLmh0bWwoJzxkaXYgaWQ9XCJlbmNyeXB0X2RhdGFfcmVzdWx0X2h0bWxcIj5DcnlwdGVkICE8L2Rpdj4nKVxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAkKCcjZW5jcnlwdF9kYXRhX3Jlc3VsdF9odG1sJykucmVtb3ZlKCkgfSwxNTAwKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBlbmNyeXB0aW9uX3N0YXRlX3ZhbHVlKFwiMFwiKVxuICAgICAgICAgICAgJCgnI3BhcmFtc19lbmNyeXB0aW9uJykucHJvcCgncmVhZG9ubHknLCBmYWxzZSlcbiAgICAgICAgICAgICQoJyNwYXJhbXNfZW5jcnlwdGlvbicpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpXG5cbiAgICAgICAgICAgICQoJyNlbmNyeXB0X2RhdGFfcmVzdWx0JykuaHRtbCgnPGRpdiBpZD1cImVuY3J5cHRfZGF0YV9yZXN1bHRfaHRtbFwiPkRlY3J5cHRlZCAhPC9kaXY+JylcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAkKCcjZW5jcnlwdF9kYXRhX3Jlc3VsdF9odG1sJykucmVtb3ZlKClcbiAgICAgICAgICAgIH0sMTUwMClcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiaW1wb3J0X2RhdGFiYXNlXCJdJykub24oJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiaW1wb3J0X2RhdGFiYXNlXCJdJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgZmlsZSA9ICQodGhpcykudmFsKClcblxuICAgICAgICBmcy5yZWFkRmlsZShmaWxlLCAndXRmOCcsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChlcnIpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCBlcnIgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlbHNle1xuXG4gICAgICAgICAgICAgICAgbGV0IGpzb24gICAgICAgID0gJC5wYXJzZUpTT04oIGRhdGEgKVxuICAgICAgICAgICAgICAgIGxldCBqc29uZGF0YSAgICA9IGpzb24uZGF0YXNcblxuICAgICAgICAgICAgICAgICQuZWFjaChqc29uZGF0YSwgZnVuY3Rpb24oIGssIHYpe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCB0aXRsZSA9IHYudGl0bGVcblxuICAgICAgICAgICAgICAgICAgICAkLndoZW4oIHN5bmNfZGF0YV9jaGVjayggdGl0bGUgKSApLnRoZW4oZnVuY3Rpb24oIGl0ZW1zICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCBpdGVtcy5sZW5ndGggPD0gMCApe1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3luY19kYXRhX2luc2VydCh2KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNyZXN1bHRfaW1wb3J0X2RhdGFiYXNlJykudGV4dCh2LnRpdGxlICsgJyBpbnNlcmVkIGluIGRhdGFiYXNlLi4nKS5zaG93KClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3Jlc3VsdF9pbXBvcnRfZGF0YWJhc2UnKS50ZXh0KCdBbGwgaXRlbXMgYXJlIGFsbHJlYWR5IG9uIGRhdGFiYXNlLi4nKS5zaG93KClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy5rZXlfZW5jcmlwdGlvbl9zaG93Jykub24oJ2NsaWNrJywgJy5rZXlfZW5jcmlwdGlvbl9zaG93JywgZnVuY3Rpb24oKXtcblxuICAgICAgICAkKCcua2V5X2VuY3JpcHRpb25fc2hvdycpLmhpZGUoKVxuICAgICAgICAkKCcua2V5X2VuY3JpcHRpb25faGlkZScpLnNob3coKVxuXG4gICAgICAgICQoJ2lucHV0W25hbWU9XCJwYXJhbXNfZW5jcnlwdGlvblwiXScpLmF0dHIoJ3R5cGUnLCAndGV4dCcpXG5cbiAgICB9KVxuXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy5rZXlfZW5jcmlwdGlvbl9oaWRlJykub24oJ2NsaWNrJywgJy5rZXlfZW5jcmlwdGlvbl9oaWRlJywgZnVuY3Rpb24oKXtcblxuICAgICAgICAkKCcua2V5X2VuY3JpcHRpb25faGlkZScpLmhpZGUoKVxuICAgICAgICAkKCcua2V5X2VuY3JpcHRpb25fc2hvdycpLnNob3coKVxuXG4gICAgICAgICQoJ2lucHV0W25hbWU9XCJwYXJhbXNfZW5jcnlwdGlvblwiXScpLmF0dHIoJ3R5cGUnLCAncGFzc3dvcmQnKVxuXG4gICAgfSlcblxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgIEFERCBEQVRBXG4gICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgICRkLm9mZignY2hhbmdlJywgJ2lucHV0W25hbWU9XCJhZGRfaW1nXCJdJykub24oJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiYWRkX2ltZ1wiXScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYgKHRoaXMuZmlsZXMgJiYgdGhpcy5maWxlc1swXSkge1xuXG4gICAgICAgICAgICBsZXQgcmVhZGVyICAgICAgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCAgID0gaW1hZ2VJc0xvYWRlZDtcblxuICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwodGhpcy5maWxlc1swXSk7XG4gICAgICAgIH1cblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ3N1Ym1pdCcsICcjZm9ybV9hZGRfZGF0YScpLm9uKCdzdWJtaXQnLCAnI2Zvcm1fYWRkX2RhdGEnLCBmdW5jdGlvbiggZSApe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBsZXQgdGl0bGUgICAgICAgPSAkKCdpbnB1dFtuYW1lPVwiYWRkX3RpdGxlXCJdJykudmFsKClcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uID0gbmwyYnIoICQoJ3RleHRhcmVhW25hbWU9XCJhZGRfZGVzY3JpcHRpb25cIl0nKS52YWwoKSApXG5cbiAgICAgICAgaWYoIHRpdGxlLmxlbmd0aCA+PSAxICYmIGRlc2NyaXB0aW9uLmxlbmd0aCA+PSAxICl7XG5cbiAgICAgICAgICAgIGxldCBpbWcgICAgICAgICA9ICQoJ2lucHV0W25hbWU9XCJhZGRfaW1nXCJdJykudmFsKClcblxuICAgICAgICAgICAgbGV0ICR0aGlzID0gJCgnaW5wdXRbbmFtZT1cImFkZF9pbWdcIl0nKVswXVxuXG4gICAgICAgICAgICBsZXQgaW1nc2VuZCA9IHVwbG9hZF9pbWcoaW1nLCAkdGhpcyk7XG5cbiAgICAgICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uICh0eCkge1xuXG4gICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGRhdGFzICh0aXRsZSwgZGVzY3JpcHRpb24gTE9OR1RFWFQsIGltZywgcG9zaXRpb24sIGRhdGVhZGQgREFURVRJTUUsIGRhdGV1cGRhdGUgREFURVRJTUUsIGVuY3J5cHRlZCBWQVJDSEFSIE5PVCBOVUxMIERFRkFVTFQgJzAnLCBjYXRlZ29yeSBWQVJDSEFSIE5PVCBOVUxMIERFRkFVTFQgJzAnKVwiKTtcblxuICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1Qga2V5IEZST00gZW5jcnlwdGlvblwiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiggcmVzdWx0cy5yb3dzWzBdICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBrZXkgPSByZXN1bHRzLnJvd3NbMF0ua2V5O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVzY3JpcHRpb25fZW5jcnlwdCA9IENyeXB0b0pTLkFFUy5lbmNyeXB0KGRlc2NyaXB0aW9uLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25fZW5jcnlwdCA9IGRlc2NyaXB0aW9uX2VuY3J5cHQudG9TdHJpbmcoKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdJTlNFUlQgSU5UTyBkYXRhcyAodGl0bGUsIGRlc2NyaXB0aW9uLCBpbWcsIGRhdGVhZGQsIGRhdGV1cGRhdGUsIGVuY3J5cHRlZCwgY2F0ZWdvcnkpIFZBTFVFUyAoXCInK3RpdGxlKydcIiwgXCInK2Rlc2NyaXB0aW9uX2VuY3J5cHQrJ1wiLCBcIicraW1nc2VuZCsnXCIsIFwiJytkYXRldGltZSsnXCIsIFwiJytkYXRldGltZSsnXCIsIFwiMVwiLCBcIjBcIiknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnSU5TRVJUIElOVE8gZGF0YXMgKHRpdGxlLCBkZXNjcmlwdGlvbiwgaW1nLCBkYXRlYWRkLCBkYXRldXBkYXRlLCBlbmNyeXB0ZWQsIGNhdGVnb3J5KSBWQUxVRVMgKFwiJyt0aXRsZSsnXCIsIFwiJytkZXNjcmlwdGlvbisnXCIsIFwiJytpbWdzZW5kKydcIiwgXCInK2RhdGV0aW1lKydcIiwgXCInK2RhdGV0aW1lKydcIiwgXCIwXCIsIFwiMFwiKScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuXG4gICAgICAgICAgICAgICAgLy90eC5leGVjdXRlU3FsKCdJTlNFUlQgSU5UTyBkYXRhcyAodGl0bGUsIGRlc2NyaXB0aW9uLCBpbWcsIGRhdGVhZGQsIGRhdGV1cGRhdGUpIFZBTFVFUyAoXCInK3RpdGxlKydcIiwgXCInK2Rlc2NyaXB0aW9uKydcIiwgXCInK2ltZ3NlbmQrJ1wiLCBcIicrZGF0ZXRpbWUrJ1wiLCBcIicrZGF0ZXRpbWUrJ1wiKScpO1xuXG4gICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImFkZF90aXRsZVwiXScpLnZhbCgnJylcbiAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2Rlc2NyaXB0aW9uXCJdJykudmFsKCcnKVxuICAgICAgICAgICAgICAgICQoJ2ZpbGVbbmFtZT1cImFkZF9pbWdcIl0nKS52YWwoJycpXG5cblxuICAgICAgICAgICAgICAgICQucG9zdCgnL3RlbXBsYXRlcy92aWV3Lmh0bWwnLCBmdW5jdGlvbiggZGF0YSApe1xuXG4gICAgICAgICAgICAgICAgICAgICQoJyN0ZW1wbGF0ZV9sb2FkJykuaHRtbCggZGF0YSApO1xuXG4gICAgICAgICAgICAgICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG5cbiAgICAgICAgICAgIGlmKHRpdGxlLmxlbmd0aCA8PTAgKXtcblxuICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJhZGRfdGl0bGVcIl0nKS52YWwoJ3RoaXMgZmllbGQgaXMgZW1wdHkuLicpXG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJhZGRfdGl0bGVcIl0nKS52YWwodGl0bGUpXG4gICAgICAgICAgICAgICAgfSwyMDAwKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihkZXNjcmlwdGlvbi5sZW5ndGggPD0wICl7XG5cbiAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2Rlc2NyaXB0aW9uXCJdJykudmFsKCd0aGlzIGZpZWxkIGlzIGVtcHR5Li4nKVxuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2Rlc2NyaXB0aW9uXCJdJykudmFsKGRlc2NyaXB0aW9uKVxuICAgICAgICAgICAgICAgIH0sMjAwMClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG5cblxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgICBBREQgQ0FURUdPUllcbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgJGQub2ZmKCdjaGFuZ2UnLCAnaW5wdXRbbmFtZT1cImFkZF9jYXRlZ29yeV9pbWdcIl0nKS5vbignY2hhbmdlJywgJ2lucHV0W25hbWU9XCJhZGRfY2F0ZWdvcnlfaW1nXCJdJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBpZiAodGhpcy5maWxlcyAmJiB0aGlzLmZpbGVzWzBdKSB7XG5cbiAgICAgICAgICAgIGxldCByZWFkZXIgICAgICA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgICAgICByZWFkZXIub25sb2FkICAgPSBpbWFnZUlzTG9hZGVkO1xuXG4gICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTCh0aGlzLmZpbGVzWzBdKTtcbiAgICAgICAgfVxuXG4gICAgfSlcblxuICAgICRkLm9mZignc3VibWl0JywgJyNmb3JtX2FkZF9jYXRlZ29yeScpLm9uKCdzdWJtaXQnLCAnI2Zvcm1fYWRkX2NhdGVnb3J5JywgZnVuY3Rpb24oIGUgKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgbGV0IHRpdGxlICAgICAgID0gJCgnaW5wdXRbbmFtZT1cImFkZF9jYXRlZ29yeV90aXRsZVwiXScpLnZhbCgpXG4gICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IG5sMmJyKCAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2NhdGVnb3J5X2Rlc2NyaXB0aW9uXCJdJykudmFsKCkgKVxuXG4gICAgICAgIGlmKCB0aXRsZS5sZW5ndGggPj0gMSAmJiBkZXNjcmlwdGlvbi5sZW5ndGggPj0gMSApe1xuXG4gICAgICAgICAgICBsZXQgaW1nICAgICAgICAgPSAkKCdpbnB1dFtuYW1lPVwiYWRkX2NhdGVnb3J5X2ltZ1wiXScpLnZhbCgpXG5cbiAgICAgICAgICAgIGxldCAkdGhpcyA9ICQoJ2lucHV0W25hbWU9XCJhZGRfY2F0ZWdvcnlfaW1nXCJdJylbMF1cblxuICAgICAgICAgICAgbGV0IGltZ3NlbmQgPSB1cGxvYWRfaW1nKGltZywgJHRoaXMpO1xuXG4gICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBjYXRlZ29yeSAodGl0bGUsIGRlc2NyaXB0aW9uIExPTkdURVhULCBpbWcsIHBvc2l0aW9uLCBkYXRlYWRkIERBVEVUSU1FLCBkYXRldXBkYXRlIERBVEVUSU1FKVwiKTtcblxuICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ0lOU0VSVCBJTlRPIGNhdGVnb3J5ICh0aXRsZSwgZGVzY3JpcHRpb24sIGltZywgZGF0ZWFkZCwgZGF0ZXVwZGF0ZSkgVkFMVUVTIChcIicrdGl0bGUrJ1wiLCBcIicrZGVzY3JpcHRpb24rJ1wiLCBcIicraW1nc2VuZCsnXCIsIFwiJytkYXRldGltZSsnXCIsIFwiJytkYXRldGltZSsnXCIpJyk7XG5cbiAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwiYWRkX2NhdGVnb3J5X3RpdGxlXCJdJykudmFsKCcnKVxuICAgICAgICAgICAgICAgICQoJ3RleHRhcmVhW25hbWU9XCJhZGRfY2F0ZWdvcnlfZGVzY3JpcHRpb25cIl0nKS52YWwoJycpXG4gICAgICAgICAgICAgICAgJCgnZmlsZVtuYW1lPVwiYWRkX2NhdGVnb3J5X2ltZ1wiXScpLnZhbCgnJylcblxuXG4gICAgICAgICAgICAgICAgJC5wb3N0KCcvdGVtcGxhdGVzL3ZpZXcuaHRtbCcsIGZ1bmN0aW9uKCBkYXRhICl7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI3RlbXBsYXRlX2xvYWQnKS5odG1sKCBkYXRhICk7XG5cbiAgICAgICAgICAgICAgICAgICAgbG9hZF9kYXRhKG9yZGVyKTtcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcblxuICAgICAgICAgICAgaWYodGl0bGUubGVuZ3RoIDw9MCApe1xuXG4gICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImFkZF9jYXRlZ29yeV90aXRsZVwiXScpLnZhbCgndGhpcyBmaWVsZCBpcyBlbXB0eS4uJylcblxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImFkZF9jYXRlZ29yeV90aXRsZVwiXScpLnZhbCh0aXRsZSlcbiAgICAgICAgICAgICAgICB9LDIwMDApXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKGRlc2NyaXB0aW9uLmxlbmd0aCA8PTAgKXtcblxuICAgICAgICAgICAgICAgICQoJ3RleHRhcmVhW25hbWU9XCJhZGRfY2F0ZWdvcnlfZGVzY3JpcHRpb25cIl0nKS52YWwoJ3RoaXMgZmllbGQgaXMgZW1wdHkuLicpXG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQoJ3RleHRhcmVhW25hbWU9XCJhZGRfY2F0ZWdvcnlfZGVzY3JpcHRpb25cIl0nKS52YWwoZGVzY3JpcHRpb24pXG4gICAgICAgICAgICAgICAgfSwyMDAwKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcblxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICAgIEVESVQgREFUQVxuICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAkZC5vZmYoJ2NoYW5nZScsICdpbnB1dFtuYW1lPVwiZWRpdF9pbWdcIl0nKS5vbignY2hhbmdlJywgJ2lucHV0W25hbWU9XCJlZGl0X2ltZ1wiXScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYgKHRoaXMuZmlsZXMgJiYgdGhpcy5maWxlc1swXSkge1xuXG4gICAgICAgICAgICBsZXQgcmVhZGVyICAgICAgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCAgID0gaW1hZ2VJc0xvYWRlZDtcblxuICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwodGhpcy5maWxlc1swXSk7XG4gICAgICAgIH1cblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy52aWV3X2l0ZW1fZWRpdCcpLm9uKCdjbGljaycsICcudmlld19pdGVtX2VkaXQnLCBmdW5jdGlvbigpe1xuXG4gICAgICAgIGxldCByb3dpZCA9ICQodGhpcykuYXR0cignZGF0YS1pZCcpXG5cbiAgICAgICAgJC5wb3N0KCcvdGVtcGxhdGVzL2VkaXQuaHRtbCcsIGZ1bmN0aW9uKCBkYXRhICl7XG5cbiAgICAgICAgICAgICQoJyN0ZW1wbGF0ZV9sb2FkJykuaHRtbCggZGF0YSApO1xuXG4gICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbih0eCkge1xuXG4gICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnU0VMRUNUICogRlJPTSBkYXRhcyBXSEVSRSByb3dpZD0/JywgW3Jvd2lkXSwgZnVuY3Rpb24odHgsIHJlc3VsdHMpe1xuXG4gICAgICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzLnJvd3MgKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGEgICAgICAgID0gcmVzdWx0cy5yb3dzWzBdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggZGF0YS5lbmNyeXB0ZWQgPT09IFwiMVwiKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoXCJTRUxFQ1Qga2V5IEZST00gZW5jcnlwdGlvblwiLCBbXSwgZnVuY3Rpb24odHgscmVzdWx0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggcmVzdWx0cy5yb3dzWzBdICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBrZXkgPSByZXN1bHRzLnJvd3NbMF0ua2V5O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVzY3JpcHRpb24gPSBkYXRhLmRlc2NyaXB0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVzY3JpcHRpb25fZGVjcnlwdCA9IENyeXB0b0pTLkFFUy5kZWNyeXB0KGRlc2NyaXB0aW9uLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uX2RlY3J5cHQgPSBkZXNjcmlwdGlvbl9kZWNyeXB0LnRvU3RyaW5nKENyeXB0b0pTLmVuYy5VdGY4KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25fZGVjcnlwdC5yZXBsYWNlKC88YnJcXHMqXFwvPz4vZ2ksIFwiXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiZWRpdF9kZXNjcmlwdGlvblwiXScpLnZhbChkZXNjcmlwdGlvbilcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImVuY3J5cHRfc3RhdGVcIl0nKS52YWwoXCIxXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IGRhdGEuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi5yZXBsYWNlKC88YnJcXHMqXFwvPz4vZ2ksIFwiXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgndGV4dGFyZWFbbmFtZT1cImVkaXRfZGVzY3JpcHRpb25cIl0nKS52YWwoZGVzY3JpcHRpb24pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cImVuY3J5cHRfc3RhdGVcIl0nKS52YWwoXCIwXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJyb3dfaWRcIl0nKS52YWwocm93aWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwiZWRpdF90aXRsZVwiXScpLnZhbChkYXRhLnRpdGxlKVxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FkZF9pbWdfbG9hZGVkJykuaHRtbCgnPGltZyBzcmM9XCIvdXBsb2FkLycrZGF0YS5pbWcrJ1wiLz4nKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ3N1Ym1pdCcsICcjZm9ybV9lZGl0X2RhdGEnKS5vbignc3VibWl0JywgJyNmb3JtX2VkaXRfZGF0YScsIGZ1bmN0aW9uKCBlICl7XG5cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgbGV0IHJvd2lkICAgICAgICAgICA9ICQoJ2lucHV0W25hbWU9XCJyb3dfaWRcIl0nKS52YWwoKTtcbiAgICAgICAgbGV0IHRpdGxlICAgICAgICAgICA9ICQoJ2lucHV0W25hbWU9XCJlZGl0X3RpdGxlXCJdJykudmFsKClcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uICAgICA9IG5sMmJyKCAkKCd0ZXh0YXJlYVtuYW1lPVwiZWRpdF9kZXNjcmlwdGlvblwiXScpLnZhbCgpIClcbiAgICAgICAgbGV0IGVuY3J5cHRfc2F0ZSAgICA9ICQoJ2lucHV0W25hbWU9XCJlbmNyeXB0X3N0YXRlXCJdJykudmFsKClcblxuICAgICAgICBpZiggdGl0bGUubGVuZ3RoID49IDEgJiYgZGVzY3JpcHRpb24ubGVuZ3RoID49IDEgKXtcblxuICAgICAgICAgICAgbGV0IGRhdGV0aW1lICAgID0gbW9tZW50KCkuZm9ybWF0KFwiWVlZWS1NTS1ERCBISDptbTpzc1wiKTtcbiAgICAgICAgICAgIGxldCBpbWcgICAgICAgICA9ICQoJ2lucHV0W25hbWU9XCJlZGl0X2ltZ1wiXScpLnZhbCgpXG5cbiAgICAgICAgICAgIGxldCAkdGhpcyAgICAgICA9ICQoJ2lucHV0W25hbWU9XCJlZGl0X2ltZ1wiXScpWzBdXG4gICAgICAgICAgICBsZXQgaW1nc2VuZCAgICAgPSB1cGxvYWRfaW1nKGltZywgJHRoaXMpO1xuXG4gICAgICAgICAgICBkYi50cmFuc2FjdGlvbihmdW5jdGlvbiAodHgpIHtcblxuICAgICAgICAgICAgICAgIGlmKCBlbmNyeXB0X3NhdGUgPT09IFwiMVwiICl7XG5cbiAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbChcIlNFTEVDVCBrZXkgRlJPTSBlbmNyeXB0aW9uXCIsIFtdLCBmdW5jdGlvbih0eCxyZXN1bHRzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCByZXN1bHRzLnJvd3NbMF0gKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBrZXkgPSByZXN1bHRzLnJvd3NbMF0ua2V5O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRlc2NyaXB0aW9uX2VuY3J5cHQgPSBDcnlwdG9KUy5BRVMuZW5jcnlwdChkZXNjcmlwdGlvbiwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25fZW5jcnlwdCA9IGRlc2NyaXB0aW9uX2VuY3J5cHQudG9TdHJpbmcoKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIGltZ3NlbmQgIT0gXCJkZWZhdWx0LnBuZ1wiICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHguZXhlY3V0ZVNxbCgnVVBEQVRFIGRhdGFzIFNFVCB0aXRsZT0/LCBkZXNjcmlwdGlvbj0/LCBpbWc9PywgZGF0ZXVwZGF0ZT0/IFdIRVJFIHJvd2lkPT8nLCBbdGl0bGUsIGRlc2NyaXB0aW9uX2VuY3J5cHQsIGltZ3NlbmQsIGRhdGV0aW1lLCByb3dpZF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdVUERBVEUgZGF0YXMgU0VUIHRpdGxlPT8sIGRlc2NyaXB0aW9uPT8sIGRhdGV1cGRhdGU9PyBXSEVSRSByb3dpZD0/JywgW3RpdGxlLCBkZXNjcmlwdGlvbl9lbmNyeXB0LCBkYXRldGltZSwgcm93aWRdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYoIGltZ3NlbmQgIT0gXCJkZWZhdWx0LnBuZ1wiICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgdGl0bGU9PywgZGVzY3JpcHRpb249PywgaW1nPT8sIGRhdGV1cGRhdGU9PyBXSEVSRSByb3dpZD0/JywgW3RpdGxlLCBkZXNjcmlwdGlvbiwgaW1nc2VuZCwgZGF0ZXRpbWUsIHJvd2lkXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR4LmV4ZWN1dGVTcWwoJ1VQREFURSBkYXRhcyBTRVQgdGl0bGU9PywgZGVzY3JpcHRpb249PywgZGF0ZXVwZGF0ZT0/IFdIRVJFIHJvd2lkPT8nLCBbdGl0bGUsIGRlc2NyaXB0aW9uLCBkYXRldGltZSwgcm93aWRdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICQucG9zdCgnL3RlbXBsYXRlcy92aWV3Lmh0bWwnLCBmdW5jdGlvbiggZGF0YSApe1xuXG4gICAgICAgICAgICAgICAgICAgICQoJyN0ZW1wbGF0ZV9sb2FkJykuaHRtbCggZGF0YSApO1xuXG4gICAgICAgICAgICAgICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG5cbiAgICAgICAgICAgIGlmKHRpdGxlLmxlbmd0aCA8PTAgKXtcblxuICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJhZGRfdGl0bGVcIl0nKS52YWwoJ3RoaXMgZmllbGQgaXMgZW1wdHkuLicpXG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJhZGRfdGl0bGVcIl0nKS52YWwodGl0bGUpXG4gICAgICAgICAgICAgICAgfSwyMDAwKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihkZXNjcmlwdGlvbi5sZW5ndGggPD0wICl7XG5cbiAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2Rlc2NyaXB0aW9uXCJdJykudmFsKCd0aGlzIGZpZWxkIGlzIGVtcHR5Li4nKVxuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAkKCd0ZXh0YXJlYVtuYW1lPVwiYWRkX2Rlc2NyaXB0aW9uXCJdJykudmFsKGRlc2NyaXB0aW9uKVxuICAgICAgICAgICAgICAgIH0sMjAwMClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG5cblxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgICBWSUVXIERBVEFcbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgJGQub2ZmKCdjbGljaycsICcudmlld19pdGVtX2RlbGV0ZScpLm9uKCdjbGljaycsICcudmlld19pdGVtX2RlbGV0ZScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgbGV0IHJvd2lkID0gJCh0aGlzKS5hdHRyKCdkYXRhLWlkJylcblxuICAgICAgICAkKCcuaXRlbS1kZWxldGUtY29uZmlybWF0aW9uW2RhdGEtaWQ9XCInK3Jvd2lkKydcIl0nKS5mYWRlSW4oMzAwKTtcblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy5pdGVtX2NvbmZpcm1fZGVsZXRlJykub24oJ2NsaWNrJywgJy5pdGVtX2NvbmZpcm1fZGVsZXRlJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgcm93aWQgPSAkKHRoaXMpLnBhcmVudCgnLml0ZW0tZGVsZXRlLWNvbmZpcm1hdGlvbicpLmF0dHIoJ2RhdGEtaWQnKVxuXG4gICAgICAgIGRiLnRyYW5zYWN0aW9uKGZ1bmN0aW9uKHR4KSB7XG4gICAgICAgICAgICB0eC5leGVjdXRlU3FsKCdERUxFVEUgRlJPTSBkYXRhcyBXSEVSRSByb3dpZD0/JywgW3Jvd2lkXSk7XG5cbiAgICAgICAgICAgICQoJyN2aWV3X2RhdGEnKS5odG1sKCcnKVxuXG4gICAgICAgICAgICBsb2FkX2RhdGEob3JkZXIpO1xuICAgICAgICB9KTtcblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy5pdGVtX2NhbmNlbF9kZWxldGUnKS5vbignY2xpY2snLCAnLml0ZW1fY2FuY2VsX2RlbGV0ZScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgbGV0IHJvd2lkID0gJCh0aGlzKS5wYXJlbnQoJy5pdGVtLWRlbGV0ZS1jb25maXJtYXRpb24nKS5hdHRyKCdkYXRhLWlkJylcblxuICAgICAgICAkKCcuaXRlbS1kZWxldGUtY29uZmlybWF0aW9uW2RhdGEtaWQ9XCInK3Jvd2lkKydcIl0nKS5mYWRlT3V0KDMwMCk7XG5cbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcuY2F0ZWdvcnktaGlkZScpLm9uKCdjbGljaycsICcuY2F0ZWdvcnktaGlkZScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgbGV0IHJvd2lkID0gJCh0aGlzKS5hdHRyKCdkYXRhLWlkJyk7XG5cbiAgICAgICAgaWYoICQoJy5jYXRlZ29yeS12aWV3LWl0ZW1bZGF0YS1pZD1cIicrcm93aWQrJ1wiXScpLmlzKCc6dmlzaWJsZScpICl7XG4gICAgICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCdpJykuY3NzKCd0cmFuc2Zvcm0nLCdyb3RhdGUoMGRlZyknKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCdpJykuY3NzKCd0cmFuc2Zvcm0nLCdyb3RhdGUoNDVkZWcpJylcbiAgICAgICAgfVxuXG4gICAgICAgICQoJy5jYXRlZ29yeS12aWV3LWl0ZW1bZGF0YS1pZD1cIicrcm93aWQrJ1wiXScpLnNsaWRlVG9nZ2xlKDMwMClcblxuICAgIH0pXG5cblxuICAgICRkLm9mZignY2xpY2snLCAnLmhpZGUtaXRlbScpLm9uKCdjbGljaycsICcuaGlkZS1pdGVtJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgcm93aWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaWQnKTtcblxuICAgICAgICBpZiggJCgnLmRlc2NyaXB0aW9uLWl0ZW1bZGF0YS1pZD1cIicrcm93aWQrJ1wiXScpLmlzKCc6dmlzaWJsZScpICl7XG4gICAgICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCdpJykuY3NzKCd0cmFuc2Zvcm0nLCdyb3RhdGUoMGRlZyknKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCdpJykuY3NzKCd0cmFuc2Zvcm0nLCdyb3RhdGUoNDVkZWcpJylcbiAgICAgICAgfVxuXG4gICAgICAgICQoJy5kZXNjcmlwdGlvbi1pdGVtW2RhdGEtaWQ9XCInK3Jvd2lkKydcIl0nKS5zbGlkZVRvZ2dsZSgzMDApXG5cbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcudmlld19zaG93X2FsbF9kZXNjcmlwdGlvbicpLm9uKCdjbGljaycsICcudmlld19zaG93X2FsbF9kZXNjcmlwdGlvbicsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYoICQoJy52aWV3LWl0ZW0nKS5pcygnOnZpc2libGUnKSApe1xuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKClcbiAgICAgICAgICAgICQoJy52aWV3X2hpZGVfYWxsX2Rlc2NyaXB0aW9uJykuc2hvdygpXG4gICAgICAgICAgICAkKCcuZGVzY3JpcHRpb24taXRlbScpLnNsaWRlRG93bigzMDApXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcudmlld19oaWRlX2FsbF9kZXNjcmlwdGlvbicpLm9uKCdjbGljaycsICcudmlld19oaWRlX2FsbF9kZXNjcmlwdGlvbicsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYoICQoJy52aWV3LWl0ZW0nKS5pcygnOnZpc2libGUnKSApe1xuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKClcbiAgICAgICAgICAgICQoJy52aWV3X3Nob3dfYWxsX2Rlc2NyaXB0aW9uJykuc2hvdygpXG4gICAgICAgICAgICAkKCcuZGVzY3JpcHRpb24taXRlbScpLnNsaWRlVXAoMzAwKVxuICAgICAgICB9XG5cbiAgICB9KVxuXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy52aWV3X2hpZGVfYWxsX2l0ZW0nKS5vbignY2xpY2snLCAnLnZpZXdfaGlkZV9hbGxfaXRlbScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYoICQoJy52aWV3LWl0ZW0nKS5pcygnOnZpc2libGUnKSApe1xuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKClcbiAgICAgICAgICAgICQoJy52aWV3X3Nob3dfYWxsX2l0ZW0nKS5zaG93KClcbiAgICAgICAgICAgICQoJy52aWV3LWl0ZW0nKS5jc3MoJ29wYWNpdHknLCAnMCcpXG4gICAgICAgICAgICAkKCcuc2VjcmV0LWltZycpLmZhZGVJbigzMDApXG4gICAgICAgIH1cblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ2NsaWNrJywgJy52aWV3X3Nob3dfYWxsX2l0ZW0nKS5vbignY2xpY2snLCAnLnZpZXdfc2hvd19hbGxfaXRlbScsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYoICQoJy52aWV3LWl0ZW0nKS5pcygnOnZpc2libGUnKSApe1xuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKClcbiAgICAgICAgICAgICQoJy52aWV3X2hpZGVfYWxsX2l0ZW0nKS5zaG93KClcbiAgICAgICAgICAgICQoJy52aWV3LWl0ZW0nKS5jc3MoJ29wYWNpdHknLCcxJylcbiAgICAgICAgICAgICQoJy5zZWNyZXQtaW1nJykuZmFkZU91dCgzMDApXG4gICAgICAgIH1cblxuICAgIH0pXG5cbiAgICAkZC5vZmYoJ21vdXNlZW50ZXInLCAnLmdyaXAnKS5vbignbW91c2VlbnRlcicsICcuZ3JpcCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgIGxldCBkYXRhaWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaWQnKVxuICAgICAgICAkKCcuZ3JpcC1ub3RpY2VbZGF0YS1pZD1cIicrZGF0YWlkKydcIl0nKS5mYWRlSW4oMzAwKVxuICAgIH0pXG4gICAgJGQub2ZmKCdtb3VzZWxlYXZlJywgJy5ncmlwLCAudmlldy1pdGVtJykub24oJ21vdXNlbGVhdmUnLCAnLmdyaXAsIC52aWV3LWl0ZW0nLCBmdW5jdGlvbigpe1xuICAgICAgICBsZXQgZGF0YWlkID0gJCh0aGlzKS5hdHRyKCdkYXRhLWlkJylcbiAgICAgICAgJCgnLmdyaXAtbm90aWNlW2RhdGEtaWQ9XCInK2RhdGFpZCsnXCJdJykuZmFkZU91dCgzMDApXG4gICAgfSlcblxuICAgIC8qXG4gICAgLy9EaXNhYmxlZFxuICAgICRkLm9mZignY2xpY2snLCAnLnZpZXdfc29ydF9pdGVtX2FzYycpLm9uKCdjbGljaycsICcudmlld19zb3J0X2l0ZW1fYXNjJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBpZiggJCgnLnZpZXctaXRlbScpLmlzKCc6dmlzaWJsZScpICl7XG5cbiAgICAgICAgICAgIG9yZGVyID0gXCJERVNDXCI7XG5cbiAgICAgICAgICAgICQoJy5mYS1zb3J0LWFtb3VudC1hc2MnKS5oaWRlKClcbiAgICAgICAgICAgICQoJy5mYS1zb3J0LWFtb3VudC1kZXNjJykuc2hvdygpXG5cbiAgICAgICAgICAgICQoJy52aWV3LWl0ZW0nKS5yZW1vdmUoKVxuICAgICAgICAgICAgJCgnI3ZpZXdfZGF0YScpLmh0bWwoJycpXG5cbiAgICAgICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG5cbiAgICAgICAgICAgIC8vc2V0VGltZW91dChmdW5jdGlvbigpeyBsb2FkX2RhdGEob3JkZXIpOyB9LDEwMDApXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgJGQub2ZmKCdjbGljaycsICcudmlld19zb3J0X2l0ZW1fZGVzYycpLm9uKCdjbGljaycsICcudmlld19zb3J0X2l0ZW1fZGVzYycsIGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgaWYoICQoJy52aWV3LWl0ZW0nKS5pcygnOnZpc2libGUnKSApe1xuXG4gICAgICAgICAgICBvcmRlciA9IFwiQVNDXCI7XG5cbiAgICAgICAgICAgICQoJy5mYS1zb3J0LWFtb3VudC1kZXNjJykuaGlkZSgpXG4gICAgICAgICAgICAkKCcuZmEtc29ydC1hbW91bnQtYXNjJykuc2hvdygpXG5cbiAgICAgICAgICAgICQoJy52aWV3LWl0ZW0nKS5yZW1vdmUoKVxuICAgICAgICAgICAgJCgnI3ZpZXdfZGF0YScpLmh0bWwoJycpXG5cbiAgICAgICAgICAgIGxvYWRfZGF0YShvcmRlcik7XG5cbiAgICAgICAgICAgIC8vc2V0VGltZW91dChmdW5jdGlvbigpeyBsb2FkX2RhdGEob3JkZXIpOyB9LDEwMDApXG4gICAgICAgIH1cbiAgICB9KVxuICAgICovXG5cblxufVxuZXhwb3J0IGRlZmF1bHQgYXBwXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXNzZXRzL2pzL2FwcC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUE1QkE7QUE4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdERBO0FBeURBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFlQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQTJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7O0FBS0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3Q0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ })

});